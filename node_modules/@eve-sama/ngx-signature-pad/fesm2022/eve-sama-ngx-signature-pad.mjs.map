{"version":3,"file":"eve-sama-ngx-signature-pad.mjs","sources":["../../src/lib/ngx-signature-pad.component.ts","../../src/lib/ngx-signature-pad.component.html","../../src/lib/ngx-signature-pad.module.ts","../../src/public-api.ts","../../src/eve-sama-ngx-signature-pad.ts"],"sourcesContent":["import {\n  Component,\n  Renderer2,\n  Input,\n  Output,\n  EventEmitter,\n  AfterViewInit,\n  OnChanges,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ElementRef\n} from '@angular/core';\nimport SignaturePad, { IPointGroup } from 'signature_pad';\nimport { NgxSignatureOptions } from './types/ngx-signature-pad';\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\n\n@Component({\n  selector: 'ngx-signature-pad',\n  templateUrl: './ngx-signature-pad.component.html',\n  styleUrls: ['./ngx-signature-pad.component.scss']\n})\nexport class NgxSignaturePadComponent implements AfterViewInit, OnChanges {\n  // #region The object of dependency 'siganture_pad'\n  private smallPad: SignaturePad;\n  private bigPad: SignaturePad;\n  // #endregion\n  // #region The object of canvas\n  private smallCanvas: HTMLCanvasElement;\n  private bigCanvas: HTMLCanvasElement;\n  // #endregion\n  // #region CDK\n  private overlayRef: OverlayRef;\n  private portal: TemplatePortal;\n  // #endregion\n  private signDataHistory: IPointGroup[] = [];\n  private fullScreenWidth: number;\n  private fullScreenHeight: number;\n  private _isEmpty = true;\n  private isFullScreen = false;\n\n  sectionHeight: number;\n\n  private get activePad(): SignaturePad {\n    return this.isFullScreen ? this.bigPad : this.smallPad;\n  }\n\n  @Input() options: NgxSignatureOptions = {};\n\n  @Output() beginSign = new EventEmitter<void>();\n  @Output() endSign = new EventEmitter<void>();\n\n  @ViewChild('fullScreenTpl') fullScreenTpl: TemplateRef<void>;\n\n  @ViewChild('nspSmall', { static: false }) nspSmall: ElementRef;\n  @ViewChild('nspBig', { static: false }) nspBig: ElementRef;\n\n  fullScreen(): void {\n    this.portal = new TemplatePortal(this.fullScreenTpl, this.viewContainerRef);\n    this.overlayRef = this.overlay.create({\n      positionStrategy: this.overlay.position().global(),\n      scrollStrategy: this.overlay.scrollStrategies.block(),\n      height: '100%',\n      width: '100%'\n    });\n    this.overlayRef.attach(this.portal);\n\n    setTimeout(() => {\n      this.initBigPad();\n      // #region Copy miniScreen's content to fullScreen\n      const { width: miniScreenWidth, height: miniScreenHeight } = this.options;\n      const ctx = this.bigCanvas.getContext('2d');\n      ctx.save();\n      ctx.translate(this.fullScreenWidth, 0);\n      ctx.rotate((90 * Math.PI) / 180);\n      ctx.drawImage(this.smallCanvas, 0, 0, miniScreenWidth, miniScreenHeight, 0, 0, this.fullScreenHeight, this.fullScreenWidth);\n      ctx.restore();\n      // #endregion\n    }, 0);\n    this.isFullScreen = true;\n  }\n\n  miniScreen(): void {\n    this.smallPad.clear();\n    // #region Copy fullScreen's content to miniScreen\n    const { width: miniScreenWidth, height: miniScreenHeight } = this.options;\n    const widthScale = miniScreenWidth / this.fullScreenHeight;\n    const heightScale = miniScreenHeight / this.fullScreenWidth;\n    const ctx = this.smallCanvas.getContext('2d');\n    ctx.save();\n    ctx.translate(0, miniScreenHeight);\n    ctx.rotate((-90 * Math.PI) / 180);\n    ctx.drawImage(\n      this.bigCanvas,\n      0,\n      0,\n      this.fullScreenWidth,\n      this.fullScreenHeight,\n      0,\n      0,\n      this.fullScreenWidth * widthScale,\n      this.fullScreenHeight * heightScale\n    );\n    ctx.restore();\n    // #endregion\n    this.overlayRef.dispose();\n    this.bigCanvas = null;\n    this.bigPad = null;\n    this.isFullScreen = false;\n  }\n\n  /** Returns signature image as an array of point groups */\n  toData(): IPointGroup[] {\n    return this.activePad.toData();\n  }\n\n  /** Draws signature image from an array of point groups */\n  fromData(pointGroups: IPointGroup[]): void {\n    this.activePad.fromData(pointGroups);\n  }\n\n  toDataURL(type?: 'image/jpeg' | 'image/svg+xml'): string {\n    switch (type) {\n      case 'image/jpeg':\n        return this.activePad.toDataURL('image/jpeg');\n      case 'image/svg+xml':\n        return this.activePad.toDataURL('image/svg+xml');\n      default:\n        return this.activePad.toDataURL();\n    }\n  }\n\n  fromDataURL(\n    dataUrl: string,\n    options?: {\n      ratio?: number;\n      width?: number;\n      height?: number;\n    },\n    callback?: (error?: ErrorEvent) => void\n  ): void {\n    this.activePad.fromDataURL(dataUrl, options, callback);\n  }\n\n  revert(): void {\n    this.signDataHistory.pop();\n    this.fromData(this.signDataHistory);\n    if (this.signDataHistory.length === 0) {\n      this.setEmpty();\n    }\n  }\n\n  // Clears the canvas\n  clear(): void {\n    this.setEmpty();\n    this.signDataHistory = [];\n    this.activePad.clear();\n  }\n\n  /** Return true if canvas is empty, otherwise return false */\n  isEmpty(): boolean {\n    return this._isEmpty;\n  }\n\n  /** Set canvas's state as dirty */\n  setDirty(): void {\n    this._isEmpty = false;\n  }\n\n  /** Set canvas's state as empty */\n  setEmpty(): void {\n    this._isEmpty = true;\n  }\n\n  getContext(): CanvasRenderingContext2D {\n    return this.isFullScreen ? this.bigCanvas.getContext('2d') : this.smallCanvas.getContext('2d');\n  }\n\n  private initBigPad(): void {\n    this.bigCanvas = this.nspBig.nativeElement; //document.querySelector('#nsp-big');\n    const fullScreenOptions = JSON.parse(JSON.stringify(this.options));\n    // Calculate the fullScreen pad's size\n    this.fullScreenWidth = document.documentElement.clientWidth;\n    const { width: miniScreenWidth, height: miniScreenHeight } = this.options;\n    this.fullScreenHeight = (this.fullScreenWidth * miniScreenWidth) / miniScreenHeight;\n    // Calculate section size\n    const viewHeight = document.documentElement.clientHeight;\n    const space = viewHeight - this.fullScreenHeight;\n    this.sectionHeight = space / 2;\n    // Init pad\n    fullScreenOptions.width = this.fullScreenWidth;\n    fullScreenOptions.height = this.fullScreenHeight;\n    const { css } = fullScreenOptions;\n    this.bigCanvas.width = this.fullScreenWidth;\n    this.bigCanvas.height = this.fullScreenHeight;\n    for (const key in css) {\n      if (Object.prototype.hasOwnProperty.call(css, key)) {\n        const value = css[key];\n        this.renderer2.setStyle(this.bigCanvas, key, value);\n      }\n    }\n    this.bigPad = new SignaturePad(this.bigCanvas, fullScreenOptions);\n    this.bigPad.onBegin = this._onBegin.bind(this);\n    this.bigPad.onEnd = this._onEnd.bind(this);\n  }\n\n  private initSmallPad(): void {\n    this.smallCanvas = this.nspSmall.nativeElement; //document.querySelector('#nsp-small');\n    const { width, height, css } = this.options;\n    this.options.width = width ? width : 300;\n    this.options.height = height ? height : 150;\n    this.smallCanvas.width = this.options.width;\n    this.smallCanvas.height = this.options.height;\n    for (const key in css) {\n      if (Object.prototype.hasOwnProperty.call(css, key)) {\n        const value = css[key];\n        this.renderer2.setStyle(this.smallCanvas, key, value);\n      }\n    }\n    this.smallPad = new SignaturePad(this.smallCanvas, this.options);\n    this.smallPad.onBegin = this._onBegin.bind(this);\n    this.smallPad.onEnd = this._onEnd.bind(this);\n  }\n\n  private _onBegin(): void {\n    this.setDirty(); // When user draws, set state as dirty\n    this.beginSign.emit();\n  }\n\n  private _onEnd(): void {\n    this.signDataHistory = this.toData();\n    this.endSign.emit();\n  }\n\n  private setPadAttribute(key: string, value: any): void {\n    if (this.bigPad) {\n      this.bigPad[key] = value;\n    }\n    this.smallPad[key] = value;\n  }\n\n  constructor(private renderer2: Renderer2, private overlay: Overlay, private viewContainerRef: ViewContainerRef) {}\n\n  ngAfterViewInit(): void {\n    this.initSmallPad();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.options.firstChange) {\n      return;\n    }\n    const { dotSize, minWidth, maxWidth, throttle, minDistance, backgroundColor, penColor, velocityFilterWeight, width, height, css } =\n      changes.options.currentValue;\n    if (dotSize) {\n      this.setPadAttribute('dotSize', dotSize);\n    }\n    if (minWidth) {\n      this.setPadAttribute('minWidth', minWidth);\n    }\n    if (maxWidth) {\n      this.setPadAttribute('maxWidth', maxWidth);\n    }\n    if (throttle) {\n      this.setPadAttribute('throttle', throttle);\n    }\n    if (minDistance) {\n      this.setPadAttribute('minDistance', minDistance);\n    }\n    if (backgroundColor) {\n      this.setPadAttribute('backgroundColor', backgroundColor);\n    }\n    if (penColor) {\n      this.setPadAttribute('penColor', penColor);\n    }\n    if (velocityFilterWeight) {\n      this.setPadAttribute('velocityFilterWeight', velocityFilterWeight);\n    }\n    if (width || height) {\n      const { width: previousWidth, height: previousHeight } = changes.options.previousValue;\n      const data = this.smallPad.toDataURL();\n      const image = new Image();\n      image.src = data;\n      image.onload = () => {\n        this.initSmallPad();\n        const ctx = this.smallCanvas.getContext('2d');\n        ctx.drawImage(image, 0, 0, previousWidth, previousHeight, 0, 0, width, height);\n      };\n    }\n    if (css) {\n      if (this.bigCanvas) {\n        for (const key in css) {\n          if (Object.prototype.hasOwnProperty.call(css, key)) {\n            const value = css[key];\n            this.renderer2.setStyle(this.bigCanvas, key, value);\n          }\n        }\n      }\n      if (this.smallCanvas) {\n        for (const key in css) {\n          if (Object.prototype.hasOwnProperty.call(css, key)) {\n            const value = css[key];\n            this.renderer2.setStyle(this.smallCanvas, key, value);\n          }\n        }\n      }\n    }\n  }\n}\n","<canvas #nspSmall></canvas>\n\n<ng-template #fullScreenTpl>\n  <div class=\"nsp-container\">\n    <div class=\"section left\" style=\"width: 100%;\" [ngStyle]=\"{'height': sectionHeight + 'px'}\"></div>\n    <canvas #nspBig></canvas>\n    <div class=\"section right\" style=\"width: 100%;\" [ngStyle]=\"{'height': sectionHeight + 'px'}\"></div>\n    <ng-content></ng-content>\n  </div>\n</ng-template>","import { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NgxSignaturePadComponent } from './ngx-signature-pad.component';\n\n@NgModule({\n  imports: [CommonModule, OverlayModule],\n  declarations: [NgxSignaturePadComponent],\n  exports: [NgxSignaturePadComponent]\n})\nexport class NgxSignaturePadModule {}\n","/*\n * Public API Surface of ngx-signature-pad\n */\n\nexport * from './lib/ngx-signature-pad.component';\nexport * from './lib/ngx-signature-pad.module';\nexport * from './lib/types/ngx-signature-pad';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}