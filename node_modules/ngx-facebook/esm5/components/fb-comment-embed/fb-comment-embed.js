import { __decorate, __extends } from "tslib";
import { Component, Input, ElementRef, Renderer2 } from '@angular/core';
import { FBMLAttribute, FBMLComponent } from '../fbml-component';
/**
 * @name Embedded Comments
 * @shortdesc Embedded comments component
 * @fbdoc https://developers.facebook.com/docs/plugins/embedded-comments
 * @description
 * Embedded comments are a simple way to put public post comments - by a Page or a person on Facebook - into the content of your web site or web page.
 * Only public comments from Facebook Pages and profiles can be embedded.
 * @usage
 * ```html
 * <fb-comment-embed href="https://www.facebook.com/zuck/posts/10102735452532991?comment_id=1070233703036185" width="500"></fb-comment-embed>
 * ```
 */
var FBCommentEmbedComponent = /** @class */ (function (_super) {
    __extends(FBCommentEmbedComponent, _super);
    function FBCommentEmbedComponent(el, rnd) {
        return _super.call(this, el, rnd, 'fb-comment-embed') || this;
    }
    FBCommentEmbedComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    __decorate([
        Input(),
        FBMLAttribute
    ], FBCommentEmbedComponent.prototype, "href", void 0);
    __decorate([
        Input(),
        FBMLAttribute
    ], FBCommentEmbedComponent.prototype, "width", void 0);
    __decorate([
        Input(),
        FBMLAttribute
    ], FBCommentEmbedComponent.prototype, "includeParent", void 0);
    FBCommentEmbedComponent = __decorate([
        Component({
            selector: 'fb-comment-embed',
            template: ''
        })
    ], FBCommentEmbedComponent);
    return FBCommentEmbedComponent;
}(FBMLComponent));
export { FBCommentEmbedComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmItY29tbWVudC1lbWJlZC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1mYWNlYm9vay8iLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvZmItY29tbWVudC1lbWJlZC9mYi1jb21tZW50LWVtYmVkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxhQUFhLEVBQUUsYUFBYSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFakU7Ozs7Ozs7Ozs7O0dBV0c7QUFLSDtJQUE2QywyQ0FBYTtJQXVCeEQsaUNBQ0UsRUFBYyxFQUNkLEdBQWM7ZUFFZCxrQkFBTSxFQUFFLEVBQUUsR0FBRyxFQUFFLGtCQUFrQixDQUFDO0lBQ3BDLENBQUM7O2dCQUpLLFVBQVU7Z0JBQ1QsU0FBUzs7SUFsQmhCO1FBRkMsS0FBSyxFQUFFO1FBQ1AsYUFBYTt5REFDRDtJQU9iO1FBRkMsS0FBSyxFQUFFO1FBQ1AsYUFBYTswREFDQTtJQU9kO1FBRkMsS0FBSyxFQUFFO1FBQ1AsYUFBYTtrRUFDUztJQXJCWix1QkFBdUI7UUFKbkMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGtCQUFrQjtZQUM1QixRQUFRLEVBQUUsRUFBRTtTQUNiLENBQUM7T0FDVyx1QkFBdUIsQ0E4Qm5DO0lBQUQsOEJBQUM7Q0FBQSxBQTlCRCxDQUE2QyxhQUFhLEdBOEJ6RDtTQTlCWSx1QkFBdUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBFbGVtZW50UmVmLCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZCTUxBdHRyaWJ1dGUsIEZCTUxDb21wb25lbnQgfSBmcm9tICcuLi9mYm1sLWNvbXBvbmVudCc7XG5cbi8qKlxuICogQG5hbWUgRW1iZWRkZWQgQ29tbWVudHNcbiAqIEBzaG9ydGRlc2MgRW1iZWRkZWQgY29tbWVudHMgY29tcG9uZW50XG4gKiBAZmJkb2MgaHR0cHM6Ly9kZXZlbG9wZXJzLmZhY2Vib29rLmNvbS9kb2NzL3BsdWdpbnMvZW1iZWRkZWQtY29tbWVudHNcbiAqIEBkZXNjcmlwdGlvblxuICogRW1iZWRkZWQgY29tbWVudHMgYXJlIGEgc2ltcGxlIHdheSB0byBwdXQgcHVibGljIHBvc3QgY29tbWVudHMgLSBieSBhIFBhZ2Ugb3IgYSBwZXJzb24gb24gRmFjZWJvb2sgLSBpbnRvIHRoZSBjb250ZW50IG9mIHlvdXIgd2ViIHNpdGUgb3Igd2ViIHBhZ2UuXG4gKiBPbmx5IHB1YmxpYyBjb21tZW50cyBmcm9tIEZhY2Vib29rIFBhZ2VzIGFuZCBwcm9maWxlcyBjYW4gYmUgZW1iZWRkZWQuXG4gKiBAdXNhZ2VcbiAqIGBgYGh0bWxcbiAqIDxmYi1jb21tZW50LWVtYmVkIGhyZWY9XCJodHRwczovL3d3dy5mYWNlYm9vay5jb20venVjay9wb3N0cy8xMDEwMjczNTQ1MjUzMjk5MT9jb21tZW50X2lkPTEwNzAyMzM3MDMwMzYxODVcIiB3aWR0aD1cIjUwMFwiPjwvZmItY29tbWVudC1lbWJlZD5cbiAqIGBgYFxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdmYi1jb21tZW50LWVtYmVkJyxcbiAgdGVtcGxhdGU6ICcnXG59KVxuZXhwb3J0IGNsYXNzIEZCQ29tbWVudEVtYmVkQ29tcG9uZW50IGV4dGVuZHMgRkJNTENvbXBvbmVudCB7XG5cbiAgLyoqXG4gICAqIFRoZSBhYnNvbHV0ZSBVUkwgb2YgdGhlIGNvbW1lbnQuXG4gICAqL1xuICBASW5wdXQoKVxuICBARkJNTEF0dHJpYnV0ZVxuICBocmVmOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSB3aWR0aCBvZiB0aGUgZW1iZWRkZWQgY29tbWVudCBjb250YWluZXIuIE1pbi4gYDIyMHB4YC4gRGVmYXVsdHMgdG8gYDU2MHB4YC5cbiAgICovXG4gIEBJbnB1dCgpXG4gIEBGQk1MQXR0cmlidXRlXG4gIHdpZHRoOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFNldCB0byBgdHJ1ZWAgdG8gaW5jbHVkZSBwYXJlbnQgY29tbWVudCAoaWYgVVJMIGlzIGEgcmVwbHkpLiBEZWZhdWx0cyB0byBgZmFsc2VgLlxuICAgKi9cbiAgQElucHV0KClcbiAgQEZCTUxBdHRyaWJ1dGVcbiAgaW5jbHVkZVBhcmVudDogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBlbDogRWxlbWVudFJlZixcbiAgICBybmQ6IFJlbmRlcmVyMlxuICApIHtcbiAgICBzdXBlcihlbCwgcm5kLCAnZmItY29tbWVudC1lbWJlZCcpO1xuICB9XG5cbn1cbiJdfQ==