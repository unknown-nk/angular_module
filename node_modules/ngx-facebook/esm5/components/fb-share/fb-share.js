import { __decorate, __extends } from "tslib";
import { Component, Input, ElementRef, Renderer2 } from '@angular/core';
import { FBMLAttribute, FBMLComponent } from '../fbml-component';
/**
 * @name Share Button
 * @shortdesc Share button component
 * @fbdoc https://developers.facebook.com/docs/plugins/share-button
 * @description
 * The Share button lets people add a personalized message to links before sharing on their timeline, in groups, or to their friends via a Facebook Message.
 * @usage
 * ```html
 * <fb-share href="https://github.com/zyra/ngx-facebook-sdk/"></fb-share>
 * ```
 */
var FBShareComponent = /** @class */ (function (_super) {
    __extends(FBShareComponent, _super);
    function FBShareComponent(el, rnd) {
        return _super.call(this, el, rnd, 'fb-share-button') || this;
    }
    FBShareComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    __decorate([
        Input(),
        FBMLAttribute
    ], FBShareComponent.prototype, "href", void 0);
    __decorate([
        Input(),
        FBMLAttribute
    ], FBShareComponent.prototype, "layout", void 0);
    __decorate([
        Input(),
        FBMLAttribute
    ], FBShareComponent.prototype, "mobileIframe", void 0);
    __decorate([
        Input(),
        FBMLAttribute
    ], FBShareComponent.prototype, "size", void 0);
    FBShareComponent = __decorate([
        Component({
            selector: 'fb-share',
            template: ''
        })
    ], FBShareComponent);
    return FBShareComponent;
}(FBMLComponent));
export { FBShareComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmItc2hhcmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZmFjZWJvb2svIiwic291cmNlcyI6WyJjb21wb25lbnRzL2ZiLXNoYXJlL2ZiLXNoYXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxhQUFhLEVBQUUsYUFBYSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFakU7Ozs7Ozs7Ozs7R0FVRztBQUtIO0lBQXNDLG9DQUFhO0lBOEJqRCwwQkFDRSxFQUFjLEVBQ2QsR0FBYztlQUVkLGtCQUFNLEVBQUUsRUFBRSxHQUFHLEVBQUUsaUJBQWlCLENBQUM7SUFDbkMsQ0FBQzs7Z0JBSkssVUFBVTtnQkFDVCxTQUFTOztJQXpCaEI7UUFGQyxLQUFLLEVBQUU7UUFDUCxhQUFhO2tEQUNEO0lBT2I7UUFGQyxLQUFLLEVBQUU7UUFDUCxhQUFhO29EQUNDO0lBT2Y7UUFGQyxLQUFLLEVBQUU7UUFDUCxhQUFhOzBEQUNRO0lBT3RCO1FBRkMsS0FBSyxFQUFFO1FBQ1AsYUFBYTtrREFDRDtJQTVCRixnQkFBZ0I7UUFKNUIsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLFVBQVU7WUFDcEIsUUFBUSxFQUFFLEVBQUU7U0FDYixDQUFDO09BQ1csZ0JBQWdCLENBcUM1QjtJQUFELHVCQUFDO0NBQUEsQUFyQ0QsQ0FBc0MsYUFBYSxHQXFDbEQ7U0FyQ1ksZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgRWxlbWVudFJlZiwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGQk1MQXR0cmlidXRlLCBGQk1MQ29tcG9uZW50IH0gZnJvbSAnLi4vZmJtbC1jb21wb25lbnQnO1xuXG4vKipcbiAqIEBuYW1lIFNoYXJlIEJ1dHRvblxuICogQHNob3J0ZGVzYyBTaGFyZSBidXR0b24gY29tcG9uZW50XG4gKiBAZmJkb2MgaHR0cHM6Ly9kZXZlbG9wZXJzLmZhY2Vib29rLmNvbS9kb2NzL3BsdWdpbnMvc2hhcmUtYnV0dG9uXG4gKiBAZGVzY3JpcHRpb25cbiAqIFRoZSBTaGFyZSBidXR0b24gbGV0cyBwZW9wbGUgYWRkIGEgcGVyc29uYWxpemVkIG1lc3NhZ2UgdG8gbGlua3MgYmVmb3JlIHNoYXJpbmcgb24gdGhlaXIgdGltZWxpbmUsIGluIGdyb3Vwcywgb3IgdG8gdGhlaXIgZnJpZW5kcyB2aWEgYSBGYWNlYm9vayBNZXNzYWdlLlxuICogQHVzYWdlXG4gKiBgYGBodG1sXG4gKiA8ZmItc2hhcmUgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS96eXJhL25neC1mYWNlYm9vay1zZGsvXCI+PC9mYi1zaGFyZT5cbiAqIGBgYFxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdmYi1zaGFyZScsXG4gIHRlbXBsYXRlOiAnJ1xufSlcbmV4cG9ydCBjbGFzcyBGQlNoYXJlQ29tcG9uZW50IGV4dGVuZHMgRkJNTENvbXBvbmVudCB7XG5cbiAgLyoqXG4gICAqIFRoZSBhYnNvbHV0ZSBVUkwgb2YgdGhlIHBhZ2UgdGhhdCB3aWxsIGJlIHNoYXJlZC4gRGVmYXVsdHMgdG8gdGhlIGN1cnJlbnQgVVJMLlxuICAgKi9cbiAgQElucHV0KClcbiAgQEZCTUxBdHRyaWJ1dGVcbiAgaHJlZjogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBTZWxlY3RzIG9uZSBvZiB0aGUgZGlmZmVyZW50IGxheW91dHMgdGhhdCBhcmUgYXZhaWxhYmxlIGZvciB0aGUgcGx1Z2luLiBDYW4gYmUgb25lIG9mIGBib3hfY291bnRgLCBgYnV0dG9uX2NvdW50YCwgYGJ1dHRvbmAuIERlZmF1bHRzIHRvIGBpY29uX2xpbmtgLlxuICAgKi9cbiAgQElucHV0KClcbiAgQEZCTUxBdHRyaWJ1dGVcbiAgbGF5b3V0OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIElmIHNldCB0byB0cnVlLCB0aGUgc2hhcmUgYnV0dG9uIHdpbGwgb3BlbiB0aGUgc2hhcmUgZGlhbG9nIGluIGFuIGlmcmFtZSAoaW5zdGVhZCBvZiBhIHBvcHVwKSBvbiB0b3Agb2YgeW91ciB3ZWJzaXRlIG9uIG1vYmlsZS4gVGhpcyBvcHRpb24gaXMgb25seSBhdmFpbGFibGUgZm9yIG1vYmlsZSwgbm90IGRlc2t0b3AuIERlZmF1bHRzIHRvIGBmYWxzZWAuXG4gICAqL1xuICBASW5wdXQoKVxuICBARkJNTEF0dHJpYnV0ZVxuICBtb2JpbGVJZnJhbWU6IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIFRoZSBidXR0b24gaXMgb2ZmZXJlZCBpbiAyIHNpemVzIGkuZS4gbGFyZ2UgYW5kIHNtYWxsLiBEZWZhdWx0cyB0byBgc21hbGxgLlxuICAgKi9cbiAgQElucHV0KClcbiAgQEZCTUxBdHRyaWJ1dGVcbiAgc2l6ZTogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIGVsOiBFbGVtZW50UmVmLFxuICAgIHJuZDogUmVuZGVyZXIyXG4gICkge1xuICAgIHN1cGVyKGVsLCBybmQsICdmYi1zaGFyZS1idXR0b24nKTtcbiAgfVxuXG59XG4iXX0=