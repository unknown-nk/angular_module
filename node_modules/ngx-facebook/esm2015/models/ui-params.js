//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"ui-params.js","sourceRoot":"ng://ngx-facebook/","sources":["models/ui-params.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * Params that can be passed when creating a Share dialog.\n */\nexport interface ShareDialogParams {\n    /**\n     * The link attached to this post. Required when using method share. Include open graph meta tags in the page at this URL to customize the story that is shared.\n     * Defaults to Current URL\n     */\n    href?: string;\n\n    /**\n     * A hashtag specified by the developer to be added to the shared content. People will still have the opportunity to remove this hashtag in the dialog. The hashtag should include the hash symbol, e.g. #facebook.\n     */\n    hashtag?: string;\n\n    /**\n     * A quote to be shared along with the link, either highlighted by the user or predefined by the developer, as in a pull quote on an article.\n     */\n    quote?: string;\n\n    /**\n     * If set to true the share button will open the share dialog in an iframe on top of your website (For more information see Mobile Web Share Dialog. This option is only available for mobile, not desktop.\n     */\n    mobile_iframe?: string;\n\n    /**\n     * A string specifying which Open Graph action type to publish, e.g., og.likes for the built in like type. The dialog also supports approved custom types. Required when using method share_open_graph.\n     */\n    action_type?: string;\n\n    /**\n     * A JSON object of key/value pairs specifying parameters which correspond to the action_type being used. Valid key/value pairs are the same parameters that can be used when publishing Open Graph Actions using the API. Required when using method share_open_graph.\n     */\n    action_properties?: string;\n}\n\n/**\n * Params that can be passed when creating a Feed dialog.\n */\nexport interface FeedDialogParams {\n    /**\n     * The ID of the person posting the message. If this is unspecified, it defaults to the current person. If specified, it must be the ID of the person or of a page that the person administers.\n     */\n    from?: string;\n\n    /**\n     * The ID of the profile that this story will be published to. If this is unspecified, it defaults to the value of from. The ID must be a friend who also uses your app.\n     */\n    to?: string;\n\n    /**\n     * The link attached to this post. With the Feed Dialog, people can also share plain text status updates with no content from your app; just leave the link parameter empty.\n     */\n    link?: string;\n\n    /**\n     * The URL of a picture attached to this post. The picture must be at least 200px by 200px. See our documentation on sharing best practices for more information on sizes\n     */\n    picture?: string;\n\n    /**\n     * The URL of a media file (either SWF or MP3) attached to this post. If SWF, you must also specify picture to provide a thumbnail for the video.\n     */\n    source?: string;\n\n    /**\n     * The name of the link attachment.\n     */\n    name?: string;\n\n    /**\n     * The caption of the link (appears beneath the link name). If not specified, this field is automatically populated with the URL of the link.\n     */\n    caption?: string;\n\n    /**\n     * The description of the link (appears beneath the link caption). If not specified, this field is automatically populated by information scraped from the link, typically the title of the page.\n     */\n    description?: string;\n\n    /**\n     * This argument is a comma-separated list, consisting of at most 5 distinct items, each of length at least 1 and at most 15 characters drawn from the set '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_'. Each category is used in Facebook Insights to help you measure the performance of different types of post\n     */\n    ref?: string;\n}\n\n/**\n * Params that can be passed when creating a send dialog\n */\nexport interface SendDialogParams {\n\n    /**\n     * A user ID of a recipient. Once the dialog comes up, the sender can specify additional people as recipients.\n     */\n    to?: string;\n\n    /**\n     * Required parameter. The URL that is being sent in the message.\n     */\n    link?: string;\n}\n\n/**\n * Params that can be passed when using the Lead Form Builder for forms on Facebook Lead Ads\n */\nexport interface LeadFormBuilderDialogParams {\n\n    /**\n     * The Facebook like page that the dialog will build forms for\n     */\n    page_id?: string;\n\n    /**\n     * The ad account ID associated with the like page\n     */\n    ad_account_id?: string;\n}\n\n/**\n * The object passed to the [ui](../facebook-service/#ui) method. The properties below can be passed to all three types of dialogs. Each type of dialog accepts additional parameters that are documented above.\n */\nexport interface UIParams extends ShareDialogParams, FeedDialogParams, SendDialogParams, LeadFormBuilderDialogParams {\n\n    /**\n     * The UI dialog that is being invoked. This is a required field.\n     */\n    method: any;\n\n    /**\n     * The UI dialog message.\n     */\n    message?: string;\n\n    /**\n     * Your app's unique identifier. Required.\n     */\n    app_id?: string;\n\n    /**\n     * The URL to redirect to after a person clicks a button on the dialog. Required when using URL redirection.\n     */\n    redirect_uri?: string;\n\n    /**\n     * Determines how the dialog is rendered.\n     * - If you are using the URL redirect dialog implementation, then this will be a full page display, shown within Facebook.com. This display type is called page\n     * - If you are using one of our iOS or Android SDKs to invoke the dialog, this is automatically specified and chooses an appropriate display type for the device.\n     * - If you are using the Facebook SDK for JavaScript, this will default to a modal iframe type for people logged into your app or async when using within a game on Facebook.com, and a popup window for everyone else. You can also force the popup type when when you use the Facebook SDK for JavaScript, if necessary.\n     * - Mobile web apps will always default to the touch display type.\n     */\n    display?: string;\n\n    /**\n     * - Dialog in create phase allows you to get stream url to upload video; Dialog in publish phase will provide preview and go live button. required\n     * - phase = create | publish\n     */\n    phase?: string;\n\n    /**\n     * - This parameter is required for publish phase.\n     * - The response object returned from either API or create phase.\n     */\n    broadcast_data?: any;\n\n}\n"]}