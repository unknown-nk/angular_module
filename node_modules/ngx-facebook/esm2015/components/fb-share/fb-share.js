import { __decorate } from "tslib";
import { Component, Input, ElementRef, Renderer2 } from '@angular/core';
import { FBMLAttribute, FBMLComponent } from '../fbml-component';
/**
 * @name Share Button
 * @shortdesc Share button component
 * @fbdoc https://developers.facebook.com/docs/plugins/share-button
 * @description
 * The Share button lets people add a personalized message to links before sharing on their timeline, in groups, or to their friends via a Facebook Message.
 * @usage
 * ```html
 * <fb-share href="https://github.com/zyra/ngx-facebook-sdk/"></fb-share>
 * ```
 */
let FBShareComponent = class FBShareComponent extends FBMLComponent {
    constructor(el, rnd) {
        super(el, rnd, 'fb-share-button');
    }
};
FBShareComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
__decorate([
    Input(),
    FBMLAttribute
], FBShareComponent.prototype, "href", void 0);
__decorate([
    Input(),
    FBMLAttribute
], FBShareComponent.prototype, "layout", void 0);
__decorate([
    Input(),
    FBMLAttribute
], FBShareComponent.prototype, "mobileIframe", void 0);
__decorate([
    Input(),
    FBMLAttribute
], FBShareComponent.prototype, "size", void 0);
FBShareComponent = __decorate([
    Component({
        selector: 'fb-share',
        template: ''
    })
], FBShareComponent);
export { FBShareComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmItc2hhcmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZmFjZWJvb2svIiwic291cmNlcyI6WyJjb21wb25lbnRzL2ZiLXNoYXJlL2ZiLXNoYXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxhQUFhLEVBQUUsYUFBYSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFakU7Ozs7Ozs7Ozs7R0FVRztBQUtILElBQWEsZ0JBQWdCLEdBQTdCLE1BQWEsZ0JBQWlCLFNBQVEsYUFBYTtJQThCakQsWUFDRSxFQUFjLEVBQ2QsR0FBYztRQUVkLEtBQUssQ0FBQyxFQUFFLEVBQUUsR0FBRyxFQUFFLGlCQUFpQixDQUFDLENBQUM7SUFDcEMsQ0FBQztDQUVGLENBQUE7O1lBTk8sVUFBVTtZQUNULFNBQVM7O0FBekJoQjtJQUZDLEtBQUssRUFBRTtJQUNQLGFBQWE7OENBQ0Q7QUFPYjtJQUZDLEtBQUssRUFBRTtJQUNQLGFBQWE7Z0RBQ0M7QUFPZjtJQUZDLEtBQUssRUFBRTtJQUNQLGFBQWE7c0RBQ1E7QUFPdEI7SUFGQyxLQUFLLEVBQUU7SUFDUCxhQUFhOzhDQUNEO0FBNUJGLGdCQUFnQjtJQUo1QixTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsVUFBVTtRQUNwQixRQUFRLEVBQUUsRUFBRTtLQUNiLENBQUM7R0FDVyxnQkFBZ0IsQ0FxQzVCO1NBckNZLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEVsZW1lbnRSZWYsIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRkJNTEF0dHJpYnV0ZSwgRkJNTENvbXBvbmVudCB9IGZyb20gJy4uL2ZibWwtY29tcG9uZW50JztcblxuLyoqXG4gKiBAbmFtZSBTaGFyZSBCdXR0b25cbiAqIEBzaG9ydGRlc2MgU2hhcmUgYnV0dG9uIGNvbXBvbmVudFxuICogQGZiZG9jIGh0dHBzOi8vZGV2ZWxvcGVycy5mYWNlYm9vay5jb20vZG9jcy9wbHVnaW5zL3NoYXJlLWJ1dHRvblxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGUgU2hhcmUgYnV0dG9uIGxldHMgcGVvcGxlIGFkZCBhIHBlcnNvbmFsaXplZCBtZXNzYWdlIHRvIGxpbmtzIGJlZm9yZSBzaGFyaW5nIG9uIHRoZWlyIHRpbWVsaW5lLCBpbiBncm91cHMsIG9yIHRvIHRoZWlyIGZyaWVuZHMgdmlhIGEgRmFjZWJvb2sgTWVzc2FnZS5cbiAqIEB1c2FnZVxuICogYGBgaHRtbFxuICogPGZiLXNoYXJlIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20venlyYS9uZ3gtZmFjZWJvb2stc2RrL1wiPjwvZmItc2hhcmU+XG4gKiBgYGBcbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZmItc2hhcmUnLFxuICB0ZW1wbGF0ZTogJydcbn0pXG5leHBvcnQgY2xhc3MgRkJTaGFyZUNvbXBvbmVudCBleHRlbmRzIEZCTUxDb21wb25lbnQge1xuXG4gIC8qKlxuICAgKiBUaGUgYWJzb2x1dGUgVVJMIG9mIHRoZSBwYWdlIHRoYXQgd2lsbCBiZSBzaGFyZWQuIERlZmF1bHRzIHRvIHRoZSBjdXJyZW50IFVSTC5cbiAgICovXG4gIEBJbnB1dCgpXG4gIEBGQk1MQXR0cmlidXRlXG4gIGhyZWY6IHN0cmluZztcblxuICAvKipcbiAgICogU2VsZWN0cyBvbmUgb2YgdGhlIGRpZmZlcmVudCBsYXlvdXRzIHRoYXQgYXJlIGF2YWlsYWJsZSBmb3IgdGhlIHBsdWdpbi4gQ2FuIGJlIG9uZSBvZiBgYm94X2NvdW50YCwgYGJ1dHRvbl9jb3VudGAsIGBidXR0b25gLiBEZWZhdWx0cyB0byBgaWNvbl9saW5rYC5cbiAgICovXG4gIEBJbnB1dCgpXG4gIEBGQk1MQXR0cmlidXRlXG4gIGxheW91dDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBJZiBzZXQgdG8gdHJ1ZSwgdGhlIHNoYXJlIGJ1dHRvbiB3aWxsIG9wZW4gdGhlIHNoYXJlIGRpYWxvZyBpbiBhbiBpZnJhbWUgKGluc3RlYWQgb2YgYSBwb3B1cCkgb24gdG9wIG9mIHlvdXIgd2Vic2l0ZSBvbiBtb2JpbGUuIFRoaXMgb3B0aW9uIGlzIG9ubHkgYXZhaWxhYmxlIGZvciBtb2JpbGUsIG5vdCBkZXNrdG9wLiBEZWZhdWx0cyB0byBgZmFsc2VgLlxuICAgKi9cbiAgQElucHV0KClcbiAgQEZCTUxBdHRyaWJ1dGVcbiAgbW9iaWxlSWZyYW1lOiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBUaGUgYnV0dG9uIGlzIG9mZmVyZWQgaW4gMiBzaXplcyBpLmUuIGxhcmdlIGFuZCBzbWFsbC4gRGVmYXVsdHMgdG8gYHNtYWxsYC5cbiAgICovXG4gIEBJbnB1dCgpXG4gIEBGQk1MQXR0cmlidXRlXG4gIHNpemU6IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcihcbiAgICBlbDogRWxlbWVudFJlZixcbiAgICBybmQ6IFJlbmRlcmVyMlxuICApIHtcbiAgICBzdXBlcihlbCwgcm5kLCAnZmItc2hhcmUtYnV0dG9uJyk7XG4gIH1cblxufVxuIl19