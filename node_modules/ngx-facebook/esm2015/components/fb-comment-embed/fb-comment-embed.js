import { __decorate } from "tslib";
import { Component, Input, ElementRef, Renderer2 } from '@angular/core';
import { FBMLAttribute, FBMLComponent } from '../fbml-component';
/**
 * @name Embedded Comments
 * @shortdesc Embedded comments component
 * @fbdoc https://developers.facebook.com/docs/plugins/embedded-comments
 * @description
 * Embedded comments are a simple way to put public post comments - by a Page or a person on Facebook - into the content of your web site or web page.
 * Only public comments from Facebook Pages and profiles can be embedded.
 * @usage
 * ```html
 * <fb-comment-embed href="https://www.facebook.com/zuck/posts/10102735452532991?comment_id=1070233703036185" width="500"></fb-comment-embed>
 * ```
 */
let FBCommentEmbedComponent = class FBCommentEmbedComponent extends FBMLComponent {
    constructor(el, rnd) {
        super(el, rnd, 'fb-comment-embed');
    }
};
FBCommentEmbedComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
__decorate([
    Input(),
    FBMLAttribute
], FBCommentEmbedComponent.prototype, "href", void 0);
__decorate([
    Input(),
    FBMLAttribute
], FBCommentEmbedComponent.prototype, "width", void 0);
__decorate([
    Input(),
    FBMLAttribute
], FBCommentEmbedComponent.prototype, "includeParent", void 0);
FBCommentEmbedComponent = __decorate([
    Component({
        selector: 'fb-comment-embed',
        template: ''
    })
], FBCommentEmbedComponent);
export { FBCommentEmbedComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmItY29tbWVudC1lbWJlZC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1mYWNlYm9vay8iLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvZmItY29tbWVudC1lbWJlZC9mYi1jb21tZW50LWVtYmVkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxhQUFhLEVBQUUsYUFBYSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFakU7Ozs7Ozs7Ozs7O0dBV0c7QUFLSCxJQUFhLHVCQUF1QixHQUFwQyxNQUFhLHVCQUF3QixTQUFRLGFBQWE7SUF1QnhELFlBQ0UsRUFBYyxFQUNkLEdBQWM7UUFFZCxLQUFLLENBQUMsRUFBRSxFQUFFLEdBQUcsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO0lBQ3JDLENBQUM7Q0FFRixDQUFBOztZQU5PLFVBQVU7WUFDVCxTQUFTOztBQWxCaEI7SUFGQyxLQUFLLEVBQUU7SUFDUCxhQUFhO3FEQUNEO0FBT2I7SUFGQyxLQUFLLEVBQUU7SUFDUCxhQUFhO3NEQUNBO0FBT2Q7SUFGQyxLQUFLLEVBQUU7SUFDUCxhQUFhOzhEQUNTO0FBckJaLHVCQUF1QjtJQUpuQyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsa0JBQWtCO1FBQzVCLFFBQVEsRUFBRSxFQUFFO0tBQ2IsQ0FBQztHQUNXLHVCQUF1QixDQThCbkM7U0E5QlksdUJBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgRWxlbWVudFJlZiwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGQk1MQXR0cmlidXRlLCBGQk1MQ29tcG9uZW50IH0gZnJvbSAnLi4vZmJtbC1jb21wb25lbnQnO1xuXG4vKipcbiAqIEBuYW1lIEVtYmVkZGVkIENvbW1lbnRzXG4gKiBAc2hvcnRkZXNjIEVtYmVkZGVkIGNvbW1lbnRzIGNvbXBvbmVudFxuICogQGZiZG9jIGh0dHBzOi8vZGV2ZWxvcGVycy5mYWNlYm9vay5jb20vZG9jcy9wbHVnaW5zL2VtYmVkZGVkLWNvbW1lbnRzXG4gKiBAZGVzY3JpcHRpb25cbiAqIEVtYmVkZGVkIGNvbW1lbnRzIGFyZSBhIHNpbXBsZSB3YXkgdG8gcHV0IHB1YmxpYyBwb3N0IGNvbW1lbnRzIC0gYnkgYSBQYWdlIG9yIGEgcGVyc29uIG9uIEZhY2Vib29rIC0gaW50byB0aGUgY29udGVudCBvZiB5b3VyIHdlYiBzaXRlIG9yIHdlYiBwYWdlLlxuICogT25seSBwdWJsaWMgY29tbWVudHMgZnJvbSBGYWNlYm9vayBQYWdlcyBhbmQgcHJvZmlsZXMgY2FuIGJlIGVtYmVkZGVkLlxuICogQHVzYWdlXG4gKiBgYGBodG1sXG4gKiA8ZmItY29tbWVudC1lbWJlZCBocmVmPVwiaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3p1Y2svcG9zdHMvMTAxMDI3MzU0NTI1MzI5OTE/Y29tbWVudF9pZD0xMDcwMjMzNzAzMDM2MTg1XCIgd2lkdGg9XCI1MDBcIj48L2ZiLWNvbW1lbnQtZW1iZWQ+XG4gKiBgYGBcbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZmItY29tbWVudC1lbWJlZCcsXG4gIHRlbXBsYXRlOiAnJ1xufSlcbmV4cG9ydCBjbGFzcyBGQkNvbW1lbnRFbWJlZENvbXBvbmVudCBleHRlbmRzIEZCTUxDb21wb25lbnQge1xuXG4gIC8qKlxuICAgKiBUaGUgYWJzb2x1dGUgVVJMIG9mIHRoZSBjb21tZW50LlxuICAgKi9cbiAgQElucHV0KClcbiAgQEZCTUxBdHRyaWJ1dGVcbiAgaHJlZjogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgd2lkdGggb2YgdGhlIGVtYmVkZGVkIGNvbW1lbnQgY29udGFpbmVyLiBNaW4uIGAyMjBweGAuIERlZmF1bHRzIHRvIGA1NjBweGAuXG4gICAqL1xuICBASW5wdXQoKVxuICBARkJNTEF0dHJpYnV0ZVxuICB3aWR0aDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBTZXQgdG8gYHRydWVgIHRvIGluY2x1ZGUgcGFyZW50IGNvbW1lbnQgKGlmIFVSTCBpcyBhIHJlcGx5KS4gRGVmYXVsdHMgdG8gYGZhbHNlYC5cbiAgICovXG4gIEBJbnB1dCgpXG4gIEBGQk1MQXR0cmlidXRlXG4gIGluY2x1ZGVQYXJlbnQ6IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3IoXG4gICAgZWw6IEVsZW1lbnRSZWYsXG4gICAgcm5kOiBSZW5kZXJlcjJcbiAgKSB7XG4gICAgc3VwZXIoZWwsIHJuZCwgJ2ZiLWNvbW1lbnQtZW1iZWQnKTtcbiAgfVxuXG59XG4iXX0=