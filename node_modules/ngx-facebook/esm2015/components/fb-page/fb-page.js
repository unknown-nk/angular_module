import { __decorate } from "tslib";
import { Component, Input, ElementRef, Renderer2 } from '@angular/core';
import { FBMLAttribute, FBMLComponent } from '../fbml-component';
/**
 * @name Page Plugin
 * @shortdesc Page plugin component
 * @fbdoc https://developers.facebook.com/docs/plugins/page-plugin
 * @description
 * The Page plugin lets you easily embed and promote any Facebook Page on your website. Just like on Facebook, your visitors can like and share the Page without leaving your site.
 * @usage
 * ```html
 * <fb-page href="https://facebook.com/facebook"></fb-page>
 * ```
 */
let FBPageComponent = class FBPageComponent extends FBMLComponent {
    constructor(el, rnd) {
        super(el, rnd, 'fb-page');
    }
};
FBPageComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
__decorate([
    Input(),
    FBMLAttribute
], FBPageComponent.prototype, "href", void 0);
__decorate([
    Input(),
    FBMLAttribute
], FBPageComponent.prototype, "width", void 0);
__decorate([
    Input(),
    FBMLAttribute
], FBPageComponent.prototype, "height", void 0);
__decorate([
    Input(),
    FBMLAttribute
], FBPageComponent.prototype, "tabs", void 0);
__decorate([
    Input(),
    FBMLAttribute
], FBPageComponent.prototype, "hideCover", void 0);
__decorate([
    Input(),
    FBMLAttribute
], FBPageComponent.prototype, "showFacepile", void 0);
__decorate([
    Input(),
    FBMLAttribute
], FBPageComponent.prototype, "hideCTA", void 0);
__decorate([
    Input(),
    FBMLAttribute
], FBPageComponent.prototype, "smallHeader", void 0);
__decorate([
    Input(),
    FBMLAttribute
], FBPageComponent.prototype, "adaptContainerWidth", void 0);
FBPageComponent = __decorate([
    Component({
        selector: 'fb-page',
        template: ''
    })
], FBPageComponent);
export { FBPageComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmItcGFnZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1mYWNlYm9vay8iLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvZmItcGFnZS9mYi1wYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxhQUFhLEVBQUUsYUFBYSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFakU7Ozs7Ozs7Ozs7R0FVRztBQUtILElBQWEsZUFBZSxHQUE1QixNQUFhLGVBQWdCLFNBQVEsYUFBYTtJQXlFaEQsWUFDRSxFQUFjLEVBQ2QsR0FBYztRQUVkLEtBQUssQ0FBQyxFQUFFLEVBQUUsR0FBRyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQzVCLENBQUM7Q0FFRixDQUFBOztZQU5PLFVBQVU7WUFDVCxTQUFTOztBQXBFaEI7SUFGQyxLQUFLLEVBQUU7SUFDUCxhQUFhOzZDQUNEO0FBUWI7SUFGQyxLQUFLLEVBQUU7SUFDUCxhQUFhOzhDQUNBO0FBUWQ7SUFGQyxLQUFLLEVBQUU7SUFDUCxhQUFhOytDQUNDO0FBUWY7SUFGQyxLQUFLLEVBQUU7SUFDUCxhQUFhOzZDQUNEO0FBUWI7SUFGQyxLQUFLLEVBQUU7SUFDUCxhQUFhO2tEQUNLO0FBUW5CO0lBRkMsS0FBSyxFQUFFO0lBQ1AsYUFBYTtxREFDUTtBQVF0QjtJQUZDLEtBQUssRUFBRTtJQUNQLGFBQWE7Z0RBQ0c7QUFRakI7SUFGQyxLQUFLLEVBQUU7SUFDUCxhQUFhO29EQUNPO0FBUXJCO0lBRkMsS0FBSyxFQUFFO0lBQ1AsYUFBYTs0REFDZTtBQXZFbEIsZUFBZTtJQUozQixTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsU0FBUztRQUNuQixRQUFRLEVBQUUsRUFBRTtLQUNiLENBQUM7R0FDVyxlQUFlLENBZ0YzQjtTQWhGWSxlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgRWxlbWVudFJlZiwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGQk1MQXR0cmlidXRlLCBGQk1MQ29tcG9uZW50IH0gZnJvbSAnLi4vZmJtbC1jb21wb25lbnQnO1xuXG4vKipcbiAqIEBuYW1lIFBhZ2UgUGx1Z2luXG4gKiBAc2hvcnRkZXNjIFBhZ2UgcGx1Z2luIGNvbXBvbmVudFxuICogQGZiZG9jIGh0dHBzOi8vZGV2ZWxvcGVycy5mYWNlYm9vay5jb20vZG9jcy9wbHVnaW5zL3BhZ2UtcGx1Z2luXG4gKiBAZGVzY3JpcHRpb25cbiAqIFRoZSBQYWdlIHBsdWdpbiBsZXRzIHlvdSBlYXNpbHkgZW1iZWQgYW5kIHByb21vdGUgYW55IEZhY2Vib29rIFBhZ2Ugb24geW91ciB3ZWJzaXRlLiBKdXN0IGxpa2Ugb24gRmFjZWJvb2ssIHlvdXIgdmlzaXRvcnMgY2FuIGxpa2UgYW5kIHNoYXJlIHRoZSBQYWdlIHdpdGhvdXQgbGVhdmluZyB5b3VyIHNpdGUuXG4gKiBAdXNhZ2VcbiAqIGBgYGh0bWxcbiAqIDxmYi1wYWdlIGhyZWY9XCJodHRwczovL2ZhY2Vib29rLmNvbS9mYWNlYm9va1wiPjwvZmItcGFnZT5cbiAqIGBgYFxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdmYi1wYWdlJyxcbiAgdGVtcGxhdGU6ICcnXG59KVxuZXhwb3J0IGNsYXNzIEZCUGFnZUNvbXBvbmVudCBleHRlbmRzIEZCTUxDb21wb25lbnQge1xuXG4gIC8qKlxuICAgKiBUaGUgVVJMIG9mIHRoZSBGYWNlYm9vayBQYWdlXG4gICAqL1xuICBASW5wdXQoKVxuICBARkJNTEF0dHJpYnV0ZVxuICBocmVmOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBwaXhlbCB3aWR0aCBvZiB0aGUgcGx1Z2luLiBNaW4uIGlzIGAxODBgICYgTWF4LiBpcyBgNTAwYC5cbiAgICogRGVmYXVsdHMgdG8gYDM0MGAuXG4gICAqL1xuICBASW5wdXQoKVxuICBARkJNTEF0dHJpYnV0ZVxuICB3aWR0aDogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBUaGUgcGl4ZWwgaGVpZ2h0IG9mIHRoZSBwbHVnaW4uIE1pbi4gaXMgYDcwYC5cbiAgICogRGVmYXVsdHMgdG8gYDUwMGAuXG4gICAqL1xuICBASW5wdXQoKVxuICBARkJNTEF0dHJpYnV0ZVxuICBoZWlnaHQ6IG51bWJlcjtcblxuICAvKipcbiAgICogVGFicyB0byByZW5kZXIgaS5lLiBgdGltZWxpbmVgLCBgZXZlbnRzYCwgYG1lc3NhZ2VzYC4gVXNlIGEgY29tbWEtc2VwYXJhdGVkIGxpc3QgdG8gYWRkIG11bHRpcGxlIHRhYnMsIGkuZS4gYHRpbWVsaW5lYCwgYGV2ZW50c2AuXG4gICAqIERlZmF1bHRzIHRvIGB0aW1lbGluZWAuXG4gICAqL1xuICBASW5wdXQoKVxuICBARkJNTEF0dHJpYnV0ZVxuICB0YWJzOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEhpZGUgY292ZXIgcGhvdG8gaW4gdGhlIGhlYWRlci5cbiAgICogRGVmYXVsdHMgdG8gYGZhbHNlYC5cbiAgICovXG4gIEBJbnB1dCgpXG4gIEBGQk1MQXR0cmlidXRlXG4gIGhpZGVDb3ZlcjogYm9vbGVhbjtcblxuICAvKipcbiAgICogU2hvdyBwcm9maWxlIHBob3RvcyB3aGVuIGZyaWVuZHMgbGlrZSB0aGlzLlxuICAgKiBEZWZhdWx0cyB0byBgdHJ1ZWAuXG4gICAqL1xuICBASW5wdXQoKVxuICBARkJNTEF0dHJpYnV0ZVxuICBzaG93RmFjZXBpbGU6IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIEhpZGUgdGhlIGN1c3RvbSBjYWxsIHRvIGFjdGlvbiBidXR0b24gKGlmIGF2YWlsYWJsZSkuXG4gICAqIERlZmF1bHQgdG8gYGZhbHNlYC5cbiAgICovXG4gIEBJbnB1dCgpXG4gIEBGQk1MQXR0cmlidXRlXG4gIGhpZGVDVEE6IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIFVzZSB0aGUgc21hbGwgaGVhZGVyIGluc3RlYWQuXG4gICAqIERlZmF1bHRzIHRvIGBmYWxzZWAuXG4gICAqL1xuICBASW5wdXQoKVxuICBARkJNTEF0dHJpYnV0ZVxuICBzbWFsbEhlYWRlcjogYm9vbGVhbjtcblxuICAvKipcbiAgICogVHJ5IHRvIGZpdCBpbnNpZGUgdGhlIGNvbnRhaW5lciB3aWR0aC5cbiAgICogRGVmYXVsdHMgdG8gYHRydWVgLlxuICAgKi9cbiAgQElucHV0KClcbiAgQEZCTUxBdHRyaWJ1dGVcbiAgYWRhcHRDb250YWluZXJXaWR0aDogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBlbDogRWxlbWVudFJlZixcbiAgICBybmQ6IFJlbmRlcmVyMlxuICApIHtcbiAgICBzdXBlcihlbCwgcm5kLCAnZmItcGFnZScpO1xuICB9XG5cbn1cbiJdfQ==