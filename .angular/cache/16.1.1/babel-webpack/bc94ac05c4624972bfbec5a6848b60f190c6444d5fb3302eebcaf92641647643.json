{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Output, InjectionToken, forwardRef, PLATFORM_ID, Component, Inject, Optional, Input, NgModule } from '@angular/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { fromEvent, defer, Subject } from 'rxjs';\nimport { takeUntil, take, mapTo, shareReplay } from 'rxjs/operators';\n\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction EditorComponent_ng_template_0_Template(rf, ctx) {}\nconst getTinymce = () => {\n  const w = typeof window !== 'undefined' ? window : undefined;\n  return w && w.tinymce ? w.tinymce : null;\n};\nclass Events {\n  constructor() {\n    this.onBeforePaste = new EventEmitter();\n    this.onBlur = new EventEmitter();\n    this.onClick = new EventEmitter();\n    this.onContextMenu = new EventEmitter();\n    this.onCopy = new EventEmitter();\n    this.onCut = new EventEmitter();\n    this.onDblclick = new EventEmitter();\n    this.onDrag = new EventEmitter();\n    this.onDragDrop = new EventEmitter();\n    this.onDragEnd = new EventEmitter();\n    this.onDragGesture = new EventEmitter();\n    this.onDragOver = new EventEmitter();\n    this.onDrop = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onFocusIn = new EventEmitter();\n    this.onFocusOut = new EventEmitter();\n    this.onKeyDown = new EventEmitter();\n    this.onKeyPress = new EventEmitter();\n    this.onKeyUp = new EventEmitter();\n    this.onMouseDown = new EventEmitter();\n    this.onMouseEnter = new EventEmitter();\n    this.onMouseLeave = new EventEmitter();\n    this.onMouseMove = new EventEmitter();\n    this.onMouseOut = new EventEmitter();\n    this.onMouseOver = new EventEmitter();\n    this.onMouseUp = new EventEmitter();\n    this.onPaste = new EventEmitter();\n    this.onSelectionChange = new EventEmitter();\n    this.onActivate = new EventEmitter();\n    this.onAddUndo = new EventEmitter();\n    this.onBeforeAddUndo = new EventEmitter();\n    this.onBeforeExecCommand = new EventEmitter();\n    this.onBeforeGetContent = new EventEmitter();\n    this.onBeforeRenderUI = new EventEmitter();\n    this.onBeforeSetContent = new EventEmitter();\n    this.onChange = new EventEmitter();\n    this.onClearUndos = new EventEmitter();\n    this.onDeactivate = new EventEmitter();\n    this.onDirty = new EventEmitter();\n    this.onExecCommand = new EventEmitter();\n    this.onGetContent = new EventEmitter();\n    this.onHide = new EventEmitter();\n    this.onInit = new EventEmitter();\n    this.onInitNgModel = new EventEmitter();\n    this.onLoadContent = new EventEmitter();\n    this.onNodeChange = new EventEmitter();\n    this.onPostProcess = new EventEmitter();\n    this.onPostRender = new EventEmitter();\n    this.onPreInit = new EventEmitter();\n    this.onPreProcess = new EventEmitter();\n    this.onProgressState = new EventEmitter();\n    this.onRedo = new EventEmitter();\n    this.onRemove = new EventEmitter();\n    this.onReset = new EventEmitter();\n    this.onResizeEditor = new EventEmitter();\n    this.onSaveContent = new EventEmitter();\n    this.onSetAttrib = new EventEmitter();\n    this.onObjectResizeStart = new EventEmitter();\n    this.onObjectResized = new EventEmitter();\n    this.onObjectSelected = new EventEmitter();\n    this.onSetContent = new EventEmitter();\n    this.onShow = new EventEmitter();\n    this.onSubmit = new EventEmitter();\n    this.onUndo = new EventEmitter();\n    this.onVisualAid = new EventEmitter();\n  }\n}\nEvents.ɵfac = function Events_Factory(t) {\n  return new (t || Events)();\n};\nEvents.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: Events,\n  outputs: {\n    onBeforePaste: \"onBeforePaste\",\n    onBlur: \"onBlur\",\n    onClick: \"onClick\",\n    onContextMenu: \"onContextMenu\",\n    onCopy: \"onCopy\",\n    onCut: \"onCut\",\n    onDblclick: \"onDblclick\",\n    onDrag: \"onDrag\",\n    onDragDrop: \"onDragDrop\",\n    onDragEnd: \"onDragEnd\",\n    onDragGesture: \"onDragGesture\",\n    onDragOver: \"onDragOver\",\n    onDrop: \"onDrop\",\n    onFocus: \"onFocus\",\n    onFocusIn: \"onFocusIn\",\n    onFocusOut: \"onFocusOut\",\n    onKeyDown: \"onKeyDown\",\n    onKeyPress: \"onKeyPress\",\n    onKeyUp: \"onKeyUp\",\n    onMouseDown: \"onMouseDown\",\n    onMouseEnter: \"onMouseEnter\",\n    onMouseLeave: \"onMouseLeave\",\n    onMouseMove: \"onMouseMove\",\n    onMouseOut: \"onMouseOut\",\n    onMouseOver: \"onMouseOver\",\n    onMouseUp: \"onMouseUp\",\n    onPaste: \"onPaste\",\n    onSelectionChange: \"onSelectionChange\",\n    onActivate: \"onActivate\",\n    onAddUndo: \"onAddUndo\",\n    onBeforeAddUndo: \"onBeforeAddUndo\",\n    onBeforeExecCommand: \"onBeforeExecCommand\",\n    onBeforeGetContent: \"onBeforeGetContent\",\n    onBeforeRenderUI: \"onBeforeRenderUI\",\n    onBeforeSetContent: \"onBeforeSetContent\",\n    onChange: \"onChange\",\n    onClearUndos: \"onClearUndos\",\n    onDeactivate: \"onDeactivate\",\n    onDirty: \"onDirty\",\n    onExecCommand: \"onExecCommand\",\n    onGetContent: \"onGetContent\",\n    onHide: \"onHide\",\n    onInit: \"onInit\",\n    onInitNgModel: \"onInitNgModel\",\n    onLoadContent: \"onLoadContent\",\n    onNodeChange: \"onNodeChange\",\n    onPostProcess: \"onPostProcess\",\n    onPostRender: \"onPostRender\",\n    onPreInit: \"onPreInit\",\n    onPreProcess: \"onPreProcess\",\n    onProgressState: \"onProgressState\",\n    onRedo: \"onRedo\",\n    onRemove: \"onRemove\",\n    onReset: \"onReset\",\n    onResizeEditor: \"onResizeEditor\",\n    onSaveContent: \"onSaveContent\",\n    onSetAttrib: \"onSetAttrib\",\n    onObjectResizeStart: \"onObjectResizeStart\",\n    onObjectResized: \"onObjectResized\",\n    onObjectSelected: \"onObjectSelected\",\n    onSetContent: \"onSetContent\",\n    onShow: \"onShow\",\n    onSubmit: \"onSubmit\",\n    onUndo: \"onUndo\",\n    onVisualAid: \"onVisualAid\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Events, [{\n    type: Directive\n  }], null, {\n    onBeforePaste: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onClick: [{\n      type: Output\n    }],\n    onContextMenu: [{\n      type: Output\n    }],\n    onCopy: [{\n      type: Output\n    }],\n    onCut: [{\n      type: Output\n    }],\n    onDblclick: [{\n      type: Output\n    }],\n    onDrag: [{\n      type: Output\n    }],\n    onDragDrop: [{\n      type: Output\n    }],\n    onDragEnd: [{\n      type: Output\n    }],\n    onDragGesture: [{\n      type: Output\n    }],\n    onDragOver: [{\n      type: Output\n    }],\n    onDrop: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onFocusIn: [{\n      type: Output\n    }],\n    onFocusOut: [{\n      type: Output\n    }],\n    onKeyDown: [{\n      type: Output\n    }],\n    onKeyPress: [{\n      type: Output\n    }],\n    onKeyUp: [{\n      type: Output\n    }],\n    onMouseDown: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: Output\n    }],\n    onMouseLeave: [{\n      type: Output\n    }],\n    onMouseMove: [{\n      type: Output\n    }],\n    onMouseOut: [{\n      type: Output\n    }],\n    onMouseOver: [{\n      type: Output\n    }],\n    onMouseUp: [{\n      type: Output\n    }],\n    onPaste: [{\n      type: Output\n    }],\n    onSelectionChange: [{\n      type: Output\n    }],\n    onActivate: [{\n      type: Output\n    }],\n    onAddUndo: [{\n      type: Output\n    }],\n    onBeforeAddUndo: [{\n      type: Output\n    }],\n    onBeforeExecCommand: [{\n      type: Output\n    }],\n    onBeforeGetContent: [{\n      type: Output\n    }],\n    onBeforeRenderUI: [{\n      type: Output\n    }],\n    onBeforeSetContent: [{\n      type: Output\n    }],\n    onChange: [{\n      type: Output\n    }],\n    onClearUndos: [{\n      type: Output\n    }],\n    onDeactivate: [{\n      type: Output\n    }],\n    onDirty: [{\n      type: Output\n    }],\n    onExecCommand: [{\n      type: Output\n    }],\n    onGetContent: [{\n      type: Output\n    }],\n    onHide: [{\n      type: Output\n    }],\n    onInit: [{\n      type: Output\n    }],\n    onInitNgModel: [{\n      type: Output\n    }],\n    onLoadContent: [{\n      type: Output\n    }],\n    onNodeChange: [{\n      type: Output\n    }],\n    onPostProcess: [{\n      type: Output\n    }],\n    onPostRender: [{\n      type: Output\n    }],\n    onPreInit: [{\n      type: Output\n    }],\n    onPreProcess: [{\n      type: Output\n    }],\n    onProgressState: [{\n      type: Output\n    }],\n    onRedo: [{\n      type: Output\n    }],\n    onRemove: [{\n      type: Output\n    }],\n    onReset: [{\n      type: Output\n    }],\n    onResizeEditor: [{\n      type: Output\n    }],\n    onSaveContent: [{\n      type: Output\n    }],\n    onSetAttrib: [{\n      type: Output\n    }],\n    onObjectResizeStart: [{\n      type: Output\n    }],\n    onObjectResized: [{\n      type: Output\n    }],\n    onObjectSelected: [{\n      type: Output\n    }],\n    onSetContent: [{\n      type: Output\n    }],\n    onShow: [{\n      type: Output\n    }],\n    onSubmit: [{\n      type: Output\n    }],\n    onUndo: [{\n      type: Output\n    }],\n    onVisualAid: [{\n      type: Output\n    }]\n  });\n})();\nconst validEvents = ['onActivate', 'onAddUndo', 'onBeforeAddUndo', 'onBeforeExecCommand', 'onBeforeGetContent', 'onBeforeRenderUI', 'onBeforeSetContent', 'onBeforePaste', 'onBlur', 'onChange', 'onClearUndos', 'onClick', 'onContextMenu', 'onCopy', 'onCut', 'onDblclick', 'onDeactivate', 'onDirty', 'onDrag', 'onDragDrop', 'onDragEnd', 'onDragGesture', 'onDragOver', 'onDrop', 'onExecCommand', 'onFocus', 'onFocusIn', 'onFocusOut', 'onGetContent', 'onHide', 'onInit', 'onKeyDown', 'onKeyPress', 'onKeyUp', 'onLoadContent', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver', 'onMouseUp', 'onNodeChange', 'onObjectResizeStart', 'onObjectResized', 'onObjectSelected', 'onPaste', 'onPostProcess', 'onPostRender', 'onPreProcess', 'onProgressState', 'onRedo', 'onRemove', 'onReset', 'onResizeEditor', 'onSaveContent', 'onSelectionChange', 'onSetAttrib', 'onSetContent', 'onShow', 'onSubmit', 'onUndo', 'onVisualAid'];\n\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n// Caretaker note: `fromEvent` supports passing JQuery-style event targets, the editor has `on` and `off` methods which\n// will be invoked upon subscription and teardown.\nconst listenTinyMCEEvent = (editor, eventName, destroy$) => fromEvent(editor, eventName).pipe(takeUntil(destroy$));\nconst bindHandlers = (ctx, editor, destroy$) => {\n  const allowedEvents = getValidEvents(ctx);\n  allowedEvents.forEach(eventName => {\n    const eventEmitter = ctx[eventName];\n    listenTinyMCEEvent(editor, eventName.substring(2), destroy$).subscribe(event => {\n      // Caretaker note: `ngZone.run()` runs change detection since it notifies the forked Angular zone that it's\n      // being re-entered. We don't want to run `ApplicationRef.tick()` if anyone listens to the specific event\n      // within the template. E.g. if the `onSelectionChange` is not listened within the template like:\n      // `<editor (onSelectionChange)=\"...\"></editor>`\n      // then its `observers` array will be empty, and we won't run \"dead\" change detection.\n      if (eventEmitter.observers.length > 0) {\n        ctx.ngZone.run(() => eventEmitter.emit({\n          event,\n          editor\n        }));\n      }\n    });\n  });\n};\nconst getValidEvents = ctx => {\n  const ignoredEvents = parseStringProperty(ctx.ignoreEvents, []);\n  const allowedEvents = parseStringProperty(ctx.allowedEvents, validEvents).filter(event => validEvents.includes(event) && !ignoredEvents.includes(event));\n  return allowedEvents;\n};\nconst parseStringProperty = (property, defaultValue) => {\n  if (typeof property === 'string') {\n    return property.split(',').map(value => value.trim());\n  }\n  if (Array.isArray(property)) {\n    return property;\n  }\n  return defaultValue;\n};\nlet unique = 0;\nconst uuid = prefix => {\n  const date = new Date();\n  const time = date.getTime();\n  const random = Math.floor(Math.random() * 1000000000);\n  unique++;\n  return prefix + '_' + random + unique + String(time);\n};\nconst isTextarea = element => typeof element !== 'undefined' && element.tagName.toLowerCase() === 'textarea';\nconst normalizePluginArray = plugins => {\n  if (typeof plugins === 'undefined' || plugins === '') {\n    return [];\n  }\n  return Array.isArray(plugins) ? plugins : plugins.split(' ');\n};\nconst mergePlugins = (initPlugins, inputPlugins) => normalizePluginArray(initPlugins).concat(normalizePluginArray(inputPlugins));\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst createState = () => ({\n  script$: null\n});\nconst CreateScriptLoader = () => {\n  let state = createState();\n  const load = (doc, url) => state.script$ || (\n  // Caretaker note: the `script$` is a multicast observable since it's piped with `shareReplay`,\n  // so if there're multiple editor components simultaneously on the page, they'll subscribe to the internal\n  // `ReplaySubject`. The script will be loaded only once, and `ReplaySubject` will cache the result.\n  state.script$ = defer(() => {\n    const scriptTag = doc.createElement('script');\n    scriptTag.referrerPolicy = 'origin';\n    scriptTag.type = 'application/javascript';\n    scriptTag.src = url;\n    doc.head.appendChild(scriptTag);\n    return fromEvent(scriptTag, 'load').pipe(take(1), mapTo(undefined));\n  }).pipe(shareReplay({\n    bufferSize: 1,\n    refCount: true\n  })));\n  // Only to be used by tests.\n  const reinitialize = () => {\n    state = createState();\n  };\n  return {\n    load,\n    reinitialize\n  };\n};\nconst ScriptLoader = CreateScriptLoader();\n\n/* eslint-disable @typescript-eslint/no-parameter-properties */\nconst TINYMCE_SCRIPT_SRC = new InjectionToken('TINYMCE_SCRIPT_SRC');\nconst EDITOR_COMPONENT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => EditorComponent),\n  multi: true\n};\nclass EditorComponent extends Events {\n  constructor(elementRef, ngZone, platformId, tinymceScriptSrc) {\n    super();\n    this.platformId = platformId;\n    this.tinymceScriptSrc = tinymceScriptSrc;\n    this.cloudChannel = '6';\n    this.apiKey = 'no-api-key';\n    this.id = '';\n    this.modelEvents = 'change input undo redo';\n    this.onTouchedCallback = noop;\n    this.destroy$ = new Subject();\n    this.initialise = () => {\n      const finalInit = {\n        ...this.init,\n        selector: undefined,\n        target: this._element,\n        inline: this.inline,\n        readonly: this.disabled,\n        plugins: mergePlugins(this.init && this.init.plugins, this.plugins),\n        toolbar: this.toolbar || this.init && this.init.toolbar,\n        setup: editor => {\n          this._editor = editor;\n          listenTinyMCEEvent(editor, 'init', this.destroy$).subscribe(() => {\n            this.initEditor(editor);\n          });\n          bindHandlers(this, editor, this.destroy$);\n          if (this.init && typeof this.init.setup === 'function') {\n            this.init.setup(editor);\n          }\n        }\n      };\n      if (isTextarea(this._element)) {\n        this._element.style.visibility = '';\n      }\n      this.ngZone.runOutsideAngular(() => {\n        getTinymce().init(finalInit);\n      });\n    };\n    this._elementRef = elementRef;\n    this.ngZone = ngZone;\n  }\n  set disabled(val) {\n    this._disabled = val;\n    if (this._editor && this._editor.initialized) {\n      if (typeof this._editor.mode?.set === 'function') {\n        this._editor.mode.set(val ? 'readonly' : 'design');\n      } else {\n        this._editor.setMode(val ? 'readonly' : 'design');\n      }\n    }\n  }\n  get disabled() {\n    return this._disabled;\n  }\n  get editor() {\n    return this._editor;\n  }\n  writeValue(value) {\n    if (this._editor && this._editor.initialized) {\n      this._editor.setContent(isNullOrUndefined(value) ? '' : value);\n    } else {\n      this.initialValue = value === null ? undefined : value;\n    }\n  }\n  registerOnChange(fn) {\n    this.onChangeCallback = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouchedCallback = fn;\n  }\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  ngAfterViewInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.id = this.id || uuid('tiny-angular');\n      this.inline = this.inline !== undefined ? this.inline !== false : !!this.init?.inline;\n      this.createElement();\n      if (getTinymce() !== null) {\n        this.initialise();\n      } else if (this._element && this._element.ownerDocument) {\n        // Caretaker note: the component might be destroyed before the script is loaded and its code is executed.\n        // This will lead to runtime exceptions if `initialise` will be called when the component has been destroyed.\n        ScriptLoader.load(this._element.ownerDocument, this.getScriptSrc()).pipe(takeUntil(this.destroy$)).subscribe(this.initialise);\n      }\n    }\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    if (getTinymce() !== null) {\n      getTinymce().remove(this._editor);\n    }\n  }\n  createElement() {\n    const tagName = typeof this.tagName === 'string' ? this.tagName : 'div';\n    this._element = document.createElement(this.inline ? tagName : 'textarea');\n    if (this._element) {\n      if (document.getElementById(this.id)) {\n        /* eslint no-console: [\"error\", { allow: [\"warn\"] }] */\n        console.warn(`TinyMCE-Angular: an element with id [${this.id}] already exists. Editors with duplicate Id will not be able to mount`);\n      }\n      this._element.id = this.id;\n      if (isTextarea(this._element)) {\n        this._element.style.visibility = 'hidden';\n      }\n      this._elementRef.nativeElement.appendChild(this._element);\n    }\n  }\n  getScriptSrc() {\n    return isNullOrUndefined(this.tinymceScriptSrc) ? `https://cdn.tiny.cloud/1/${this.apiKey}/tinymce/${this.cloudChannel}/tinymce.min.js` : this.tinymceScriptSrc;\n  }\n  initEditor(editor) {\n    listenTinyMCEEvent(editor, 'blur', this.destroy$).subscribe(() => {\n      this.ngZone.run(() => this.onTouchedCallback());\n    });\n    listenTinyMCEEvent(editor, this.modelEvents, this.destroy$).subscribe(() => {\n      this.ngZone.run(() => this.emitOnChange(editor));\n    });\n    if (typeof this.initialValue === 'string') {\n      this.ngZone.run(() => {\n        editor.setContent(this.initialValue);\n        if (editor.getContent() !== this.initialValue) {\n          this.emitOnChange(editor);\n        }\n        if (this.onInitNgModel !== undefined) {\n          this.onInitNgModel.emit(editor);\n        }\n      });\n    }\n  }\n  emitOnChange(editor) {\n    if (this.onChangeCallback) {\n      this.onChangeCallback(editor.getContent({\n        format: this.outputFormat\n      }));\n    }\n  }\n}\nEditorComponent.ɵfac = function EditorComponent_Factory(t) {\n  return new (t || EditorComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(TINYMCE_SCRIPT_SRC, 8));\n};\nEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: EditorComponent,\n  selectors: [[\"editor\"]],\n  inputs: {\n    cloudChannel: \"cloudChannel\",\n    apiKey: \"apiKey\",\n    init: \"init\",\n    id: \"id\",\n    initialValue: \"initialValue\",\n    outputFormat: \"outputFormat\",\n    inline: \"inline\",\n    tagName: \"tagName\",\n    plugins: \"plugins\",\n    toolbar: \"toolbar\",\n    modelEvents: \"modelEvents\",\n    allowedEvents: \"allowedEvents\",\n    ignoreEvents: \"ignoreEvents\",\n    disabled: \"disabled\"\n  },\n  standalone: true,\n  features: [i0.ɵɵProvidersFeature([EDITOR_COMPONENT_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n  decls: 1,\n  vars: 0,\n  template: function EditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, EditorComponent_ng_template_0_Template, 0, 0, \"ng-template\");\n    }\n  },\n  dependencies: [CommonModule, FormsModule],\n  styles: [\"[_nghost-%COMP%]{display:block}\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'editor',\n      template: '<ng-template></ng-template>',\n      providers: [EDITOR_COMPONENT_VALUE_ACCESSOR],\n      standalone: true,\n      imports: [CommonModule, FormsModule],\n      styles: [\":host{display:block}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TINYMCE_SCRIPT_SRC]\n      }]\n    }];\n  }, {\n    cloudChannel: [{\n      type: Input\n    }],\n    apiKey: [{\n      type: Input\n    }],\n    init: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    initialValue: [{\n      type: Input\n    }],\n    outputFormat: [{\n      type: Input\n    }],\n    inline: [{\n      type: Input\n    }],\n    tagName: [{\n      type: Input\n    }],\n    plugins: [{\n      type: Input\n    }],\n    toolbar: [{\n      type: Input\n    }],\n    modelEvents: [{\n      type: Input\n    }],\n    allowedEvents: [{\n      type: Input\n    }],\n    ignoreEvents: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\nclass EditorModule {}\nEditorModule.ɵfac = function EditorModule_Factory(t) {\n  return new (t || EditorModule)();\n};\nEditorModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: EditorModule\n});\nEditorModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [EditorComponent]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [EditorComponent],\n      exports: [EditorComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EditorComponent, EditorModule, TINYMCE_SCRIPT_SRC };","map":{"version":3,"names":["i0","EventEmitter","Directive","Output","InjectionToken","forwardRef","PLATFORM_ID","Component","Inject","Optional","Input","NgModule","isPlatformBrowser","CommonModule","NG_VALUE_ACCESSOR","FormsModule","fromEvent","defer","Subject","takeUntil","take","mapTo","shareReplay","EditorComponent_ng_template_0_Template","rf","ctx","getTinymce","w","window","undefined","tinymce","Events","constructor","onBeforePaste","onBlur","onClick","onContextMenu","onCopy","onCut","onDblclick","onDrag","onDragDrop","onDragEnd","onDragGesture","onDragOver","onDrop","onFocus","onFocusIn","onFocusOut","onKeyDown","onKeyPress","onKeyUp","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onPaste","onSelectionChange","onActivate","onAddUndo","onBeforeAddUndo","onBeforeExecCommand","onBeforeGetContent","onBeforeRenderUI","onBeforeSetContent","onChange","onClearUndos","onDeactivate","onDirty","onExecCommand","onGetContent","onHide","onInit","onInitNgModel","onLoadContent","onNodeChange","onPostProcess","onPostRender","onPreInit","onPreProcess","onProgressState","onRedo","onRemove","onReset","onResizeEditor","onSaveContent","onSetAttrib","onObjectResizeStart","onObjectResized","onObjectSelected","onSetContent","onShow","onSubmit","onUndo","onVisualAid","ɵfac","Events_Factory","t","ɵdir","ɵɵdefineDirective","type","outputs","ngDevMode","ɵsetClassMetadata","validEvents","listenTinyMCEEvent","editor","eventName","destroy$","pipe","bindHandlers","allowedEvents","getValidEvents","forEach","eventEmitter","substring","subscribe","event","observers","length","ngZone","run","emit","ignoredEvents","parseStringProperty","ignoreEvents","filter","includes","property","defaultValue","split","map","value","trim","Array","isArray","unique","uuid","prefix","date","Date","time","getTime","random","Math","floor","String","isTextarea","element","tagName","toLowerCase","normalizePluginArray","plugins","mergePlugins","initPlugins","inputPlugins","concat","noop","isNullOrUndefined","createState","script$","CreateScriptLoader","state","load","doc","url","scriptTag","createElement","referrerPolicy","src","head","appendChild","bufferSize","refCount","reinitialize","ScriptLoader","TINYMCE_SCRIPT_SRC","EDITOR_COMPONENT_VALUE_ACCESSOR","provide","useExisting","EditorComponent","multi","elementRef","platformId","tinymceScriptSrc","cloudChannel","apiKey","id","modelEvents","onTouchedCallback","initialise","finalInit","init","selector","target","_element","inline","readonly","disabled","toolbar","setup","_editor","initEditor","style","visibility","runOutsideAngular","_elementRef","val","_disabled","initialized","mode","set","setMode","writeValue","setContent","initialValue","registerOnChange","fn","onChangeCallback","registerOnTouched","setDisabledState","isDisabled","ngAfterViewInit","ownerDocument","getScriptSrc","ngOnDestroy","next","remove","document","getElementById","console","warn","nativeElement","emitOnChange","getContent","format","outputFormat","EditorComponent_Factory","ɵɵdirectiveInject","ElementRef","NgZone","ɵcmp","ɵɵdefineComponent","selectors","inputs","standalone","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","decls","vars","template","EditorComponent_Template","ɵɵtemplate","dependencies","styles","args","providers","imports","Object","decorators","EditorModule","EditorModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports"],"sources":["C:/Users/nueut/OneDrive/文件/GitHub/angular/angular_module/node_modules/@tinymce/tinymce-angular/fesm2020/tinymce-tinymce-angular.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Output, InjectionToken, forwardRef, PLATFORM_ID, Component, Inject, Optional, Input, NgModule } from '@angular/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { fromEvent, defer, Subject } from 'rxjs';\nimport { takeUntil, take, mapTo, shareReplay } from 'rxjs/operators';\n\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst getTinymce = () => {\n    const w = typeof window !== 'undefined' ? window : undefined;\n    return w && w.tinymce ? w.tinymce : null;\n};\n\nclass Events {\n    constructor() {\n        this.onBeforePaste = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.onClick = new EventEmitter();\n        this.onContextMenu = new EventEmitter();\n        this.onCopy = new EventEmitter();\n        this.onCut = new EventEmitter();\n        this.onDblclick = new EventEmitter();\n        this.onDrag = new EventEmitter();\n        this.onDragDrop = new EventEmitter();\n        this.onDragEnd = new EventEmitter();\n        this.onDragGesture = new EventEmitter();\n        this.onDragOver = new EventEmitter();\n        this.onDrop = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onFocusIn = new EventEmitter();\n        this.onFocusOut = new EventEmitter();\n        this.onKeyDown = new EventEmitter();\n        this.onKeyPress = new EventEmitter();\n        this.onKeyUp = new EventEmitter();\n        this.onMouseDown = new EventEmitter();\n        this.onMouseEnter = new EventEmitter();\n        this.onMouseLeave = new EventEmitter();\n        this.onMouseMove = new EventEmitter();\n        this.onMouseOut = new EventEmitter();\n        this.onMouseOver = new EventEmitter();\n        this.onMouseUp = new EventEmitter();\n        this.onPaste = new EventEmitter();\n        this.onSelectionChange = new EventEmitter();\n        this.onActivate = new EventEmitter();\n        this.onAddUndo = new EventEmitter();\n        this.onBeforeAddUndo = new EventEmitter();\n        this.onBeforeExecCommand = new EventEmitter();\n        this.onBeforeGetContent = new EventEmitter();\n        this.onBeforeRenderUI = new EventEmitter();\n        this.onBeforeSetContent = new EventEmitter();\n        this.onChange = new EventEmitter();\n        this.onClearUndos = new EventEmitter();\n        this.onDeactivate = new EventEmitter();\n        this.onDirty = new EventEmitter();\n        this.onExecCommand = new EventEmitter();\n        this.onGetContent = new EventEmitter();\n        this.onHide = new EventEmitter();\n        this.onInit = new EventEmitter();\n        this.onInitNgModel = new EventEmitter();\n        this.onLoadContent = new EventEmitter();\n        this.onNodeChange = new EventEmitter();\n        this.onPostProcess = new EventEmitter();\n        this.onPostRender = new EventEmitter();\n        this.onPreInit = new EventEmitter();\n        this.onPreProcess = new EventEmitter();\n        this.onProgressState = new EventEmitter();\n        this.onRedo = new EventEmitter();\n        this.onRemove = new EventEmitter();\n        this.onReset = new EventEmitter();\n        this.onResizeEditor = new EventEmitter();\n        this.onSaveContent = new EventEmitter();\n        this.onSetAttrib = new EventEmitter();\n        this.onObjectResizeStart = new EventEmitter();\n        this.onObjectResized = new EventEmitter();\n        this.onObjectSelected = new EventEmitter();\n        this.onSetContent = new EventEmitter();\n        this.onShow = new EventEmitter();\n        this.onSubmit = new EventEmitter();\n        this.onUndo = new EventEmitter();\n        this.onVisualAid = new EventEmitter();\n    }\n}\nEvents.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.4\", ngImport: i0, type: Events, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nEvents.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.4\", type: Events, outputs: { onBeforePaste: \"onBeforePaste\", onBlur: \"onBlur\", onClick: \"onClick\", onContextMenu: \"onContextMenu\", onCopy: \"onCopy\", onCut: \"onCut\", onDblclick: \"onDblclick\", onDrag: \"onDrag\", onDragDrop: \"onDragDrop\", onDragEnd: \"onDragEnd\", onDragGesture: \"onDragGesture\", onDragOver: \"onDragOver\", onDrop: \"onDrop\", onFocus: \"onFocus\", onFocusIn: \"onFocusIn\", onFocusOut: \"onFocusOut\", onKeyDown: \"onKeyDown\", onKeyPress: \"onKeyPress\", onKeyUp: \"onKeyUp\", onMouseDown: \"onMouseDown\", onMouseEnter: \"onMouseEnter\", onMouseLeave: \"onMouseLeave\", onMouseMove: \"onMouseMove\", onMouseOut: \"onMouseOut\", onMouseOver: \"onMouseOver\", onMouseUp: \"onMouseUp\", onPaste: \"onPaste\", onSelectionChange: \"onSelectionChange\", onActivate: \"onActivate\", onAddUndo: \"onAddUndo\", onBeforeAddUndo: \"onBeforeAddUndo\", onBeforeExecCommand: \"onBeforeExecCommand\", onBeforeGetContent: \"onBeforeGetContent\", onBeforeRenderUI: \"onBeforeRenderUI\", onBeforeSetContent: \"onBeforeSetContent\", onChange: \"onChange\", onClearUndos: \"onClearUndos\", onDeactivate: \"onDeactivate\", onDirty: \"onDirty\", onExecCommand: \"onExecCommand\", onGetContent: \"onGetContent\", onHide: \"onHide\", onInit: \"onInit\", onInitNgModel: \"onInitNgModel\", onLoadContent: \"onLoadContent\", onNodeChange: \"onNodeChange\", onPostProcess: \"onPostProcess\", onPostRender: \"onPostRender\", onPreInit: \"onPreInit\", onPreProcess: \"onPreProcess\", onProgressState: \"onProgressState\", onRedo: \"onRedo\", onRemove: \"onRemove\", onReset: \"onReset\", onResizeEditor: \"onResizeEditor\", onSaveContent: \"onSaveContent\", onSetAttrib: \"onSetAttrib\", onObjectResizeStart: \"onObjectResizeStart\", onObjectResized: \"onObjectResized\", onObjectSelected: \"onObjectSelected\", onSetContent: \"onSetContent\", onShow: \"onShow\", onSubmit: \"onSubmit\", onUndo: \"onUndo\", onVisualAid: \"onVisualAid\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.4\", ngImport: i0, type: Events, decorators: [{\n            type: Directive\n        }], propDecorators: { onBeforePaste: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], onClick: [{\n                type: Output\n            }], onContextMenu: [{\n                type: Output\n            }], onCopy: [{\n                type: Output\n            }], onCut: [{\n                type: Output\n            }], onDblclick: [{\n                type: Output\n            }], onDrag: [{\n                type: Output\n            }], onDragDrop: [{\n                type: Output\n            }], onDragEnd: [{\n                type: Output\n            }], onDragGesture: [{\n                type: Output\n            }], onDragOver: [{\n                type: Output\n            }], onDrop: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onFocusIn: [{\n                type: Output\n            }], onFocusOut: [{\n                type: Output\n            }], onKeyDown: [{\n                type: Output\n            }], onKeyPress: [{\n                type: Output\n            }], onKeyUp: [{\n                type: Output\n            }], onMouseDown: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: Output\n            }], onMouseLeave: [{\n                type: Output\n            }], onMouseMove: [{\n                type: Output\n            }], onMouseOut: [{\n                type: Output\n            }], onMouseOver: [{\n                type: Output\n            }], onMouseUp: [{\n                type: Output\n            }], onPaste: [{\n                type: Output\n            }], onSelectionChange: [{\n                type: Output\n            }], onActivate: [{\n                type: Output\n            }], onAddUndo: [{\n                type: Output\n            }], onBeforeAddUndo: [{\n                type: Output\n            }], onBeforeExecCommand: [{\n                type: Output\n            }], onBeforeGetContent: [{\n                type: Output\n            }], onBeforeRenderUI: [{\n                type: Output\n            }], onBeforeSetContent: [{\n                type: Output\n            }], onChange: [{\n                type: Output\n            }], onClearUndos: [{\n                type: Output\n            }], onDeactivate: [{\n                type: Output\n            }], onDirty: [{\n                type: Output\n            }], onExecCommand: [{\n                type: Output\n            }], onGetContent: [{\n                type: Output\n            }], onHide: [{\n                type: Output\n            }], onInit: [{\n                type: Output\n            }], onInitNgModel: [{\n                type: Output\n            }], onLoadContent: [{\n                type: Output\n            }], onNodeChange: [{\n                type: Output\n            }], onPostProcess: [{\n                type: Output\n            }], onPostRender: [{\n                type: Output\n            }], onPreInit: [{\n                type: Output\n            }], onPreProcess: [{\n                type: Output\n            }], onProgressState: [{\n                type: Output\n            }], onRedo: [{\n                type: Output\n            }], onRemove: [{\n                type: Output\n            }], onReset: [{\n                type: Output\n            }], onResizeEditor: [{\n                type: Output\n            }], onSaveContent: [{\n                type: Output\n            }], onSetAttrib: [{\n                type: Output\n            }], onObjectResizeStart: [{\n                type: Output\n            }], onObjectResized: [{\n                type: Output\n            }], onObjectSelected: [{\n                type: Output\n            }], onSetContent: [{\n                type: Output\n            }], onShow: [{\n                type: Output\n            }], onSubmit: [{\n                type: Output\n            }], onUndo: [{\n                type: Output\n            }], onVisualAid: [{\n                type: Output\n            }] } });\nconst validEvents = [\n    'onActivate',\n    'onAddUndo',\n    'onBeforeAddUndo',\n    'onBeforeExecCommand',\n    'onBeforeGetContent',\n    'onBeforeRenderUI',\n    'onBeforeSetContent',\n    'onBeforePaste',\n    'onBlur',\n    'onChange',\n    'onClearUndos',\n    'onClick',\n    'onContextMenu',\n    'onCopy',\n    'onCut',\n    'onDblclick',\n    'onDeactivate',\n    'onDirty',\n    'onDrag',\n    'onDragDrop',\n    'onDragEnd',\n    'onDragGesture',\n    'onDragOver',\n    'onDrop',\n    'onExecCommand',\n    'onFocus',\n    'onFocusIn',\n    'onFocusOut',\n    'onGetContent',\n    'onHide',\n    'onInit',\n    'onKeyDown',\n    'onKeyPress',\n    'onKeyUp',\n    'onLoadContent',\n    'onMouseDown',\n    'onMouseEnter',\n    'onMouseLeave',\n    'onMouseMove',\n    'onMouseOut',\n    'onMouseOver',\n    'onMouseUp',\n    'onNodeChange',\n    'onObjectResizeStart',\n    'onObjectResized',\n    'onObjectSelected',\n    'onPaste',\n    'onPostProcess',\n    'onPostRender',\n    'onPreProcess',\n    'onProgressState',\n    'onRedo',\n    'onRemove',\n    'onReset',\n    'onResizeEditor',\n    'onSaveContent',\n    'onSelectionChange',\n    'onSetAttrib',\n    'onSetContent',\n    'onShow',\n    'onSubmit',\n    'onUndo',\n    'onVisualAid'\n];\n\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n// Caretaker note: `fromEvent` supports passing JQuery-style event targets, the editor has `on` and `off` methods which\n// will be invoked upon subscription and teardown.\nconst listenTinyMCEEvent = (editor, eventName, destroy$) => fromEvent(editor, eventName).pipe(takeUntil(destroy$));\nconst bindHandlers = (ctx, editor, destroy$) => {\n    const allowedEvents = getValidEvents(ctx);\n    allowedEvents.forEach((eventName) => {\n        const eventEmitter = ctx[eventName];\n        listenTinyMCEEvent(editor, eventName.substring(2), destroy$).subscribe((event) => {\n            // Caretaker note: `ngZone.run()` runs change detection since it notifies the forked Angular zone that it's\n            // being re-entered. We don't want to run `ApplicationRef.tick()` if anyone listens to the specific event\n            // within the template. E.g. if the `onSelectionChange` is not listened within the template like:\n            // `<editor (onSelectionChange)=\"...\"></editor>`\n            // then its `observers` array will be empty, and we won't run \"dead\" change detection.\n            if (eventEmitter.observers.length > 0) {\n                ctx.ngZone.run(() => eventEmitter.emit({ event, editor }));\n            }\n        });\n    });\n};\nconst getValidEvents = (ctx) => {\n    const ignoredEvents = parseStringProperty(ctx.ignoreEvents, []);\n    const allowedEvents = parseStringProperty(ctx.allowedEvents, validEvents).filter((event) => validEvents.includes(event) && !ignoredEvents.includes(event));\n    return allowedEvents;\n};\nconst parseStringProperty = (property, defaultValue) => {\n    if (typeof property === 'string') {\n        return property.split(',').map((value) => value.trim());\n    }\n    if (Array.isArray(property)) {\n        return property;\n    }\n    return defaultValue;\n};\nlet unique = 0;\nconst uuid = (prefix) => {\n    const date = new Date();\n    const time = date.getTime();\n    const random = Math.floor(Math.random() * 1000000000);\n    unique++;\n    return prefix + '_' + random + unique + String(time);\n};\nconst isTextarea = (element) => typeof element !== 'undefined' && element.tagName.toLowerCase() === 'textarea';\nconst normalizePluginArray = (plugins) => {\n    if (typeof plugins === 'undefined' || plugins === '') {\n        return [];\n    }\n    return Array.isArray(plugins) ? plugins : plugins.split(' ');\n};\nconst mergePlugins = (initPlugins, inputPlugins) => normalizePluginArray(initPlugins).concat(normalizePluginArray(inputPlugins));\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => { };\nconst isNullOrUndefined = (value) => value === null || value === undefined;\n\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst createState = () => ({\n    script$: null,\n});\nconst CreateScriptLoader = () => {\n    let state = createState();\n    const load = (doc, url) => (state.script$ ||\n        // Caretaker note: the `script$` is a multicast observable since it's piped with `shareReplay`,\n        // so if there're multiple editor components simultaneously on the page, they'll subscribe to the internal\n        // `ReplaySubject`. The script will be loaded only once, and `ReplaySubject` will cache the result.\n        (state.script$ = defer(() => {\n            const scriptTag = doc.createElement('script');\n            scriptTag.referrerPolicy = 'origin';\n            scriptTag.type = 'application/javascript';\n            scriptTag.src = url;\n            doc.head.appendChild(scriptTag);\n            return fromEvent(scriptTag, 'load').pipe(take(1), mapTo(undefined));\n        }).pipe(shareReplay({ bufferSize: 1, refCount: true }))));\n    // Only to be used by tests.\n    const reinitialize = () => {\n        state = createState();\n    };\n    return {\n        load,\n        reinitialize,\n    };\n};\nconst ScriptLoader = CreateScriptLoader();\n\n/* eslint-disable @typescript-eslint/no-parameter-properties */\nconst TINYMCE_SCRIPT_SRC = new InjectionToken('TINYMCE_SCRIPT_SRC');\nconst EDITOR_COMPONENT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => EditorComponent),\n    multi: true\n};\nclass EditorComponent extends Events {\n    constructor(elementRef, ngZone, platformId, tinymceScriptSrc) {\n        super();\n        this.platformId = platformId;\n        this.tinymceScriptSrc = tinymceScriptSrc;\n        this.cloudChannel = '6';\n        this.apiKey = 'no-api-key';\n        this.id = '';\n        this.modelEvents = 'change input undo redo';\n        this.onTouchedCallback = noop;\n        this.destroy$ = new Subject();\n        this.initialise = () => {\n            const finalInit = {\n                ...this.init,\n                selector: undefined,\n                target: this._element,\n                inline: this.inline,\n                readonly: this.disabled,\n                plugins: mergePlugins((this.init && this.init.plugins), this.plugins),\n                toolbar: this.toolbar || (this.init && this.init.toolbar),\n                setup: (editor) => {\n                    this._editor = editor;\n                    listenTinyMCEEvent(editor, 'init', this.destroy$).subscribe(() => {\n                        this.initEditor(editor);\n                    });\n                    bindHandlers(this, editor, this.destroy$);\n                    if (this.init && typeof this.init.setup === 'function') {\n                        this.init.setup(editor);\n                    }\n                }\n            };\n            if (isTextarea(this._element)) {\n                this._element.style.visibility = '';\n            }\n            this.ngZone.runOutsideAngular(() => {\n                getTinymce().init(finalInit);\n            });\n        };\n        this._elementRef = elementRef;\n        this.ngZone = ngZone;\n    }\n    set disabled(val) {\n        this._disabled = val;\n        if (this._editor && this._editor.initialized) {\n            if (typeof this._editor.mode?.set === 'function') {\n                this._editor.mode.set(val ? 'readonly' : 'design');\n            }\n            else {\n                this._editor.setMode(val ? 'readonly' : 'design');\n            }\n        }\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    get editor() {\n        return this._editor;\n    }\n    writeValue(value) {\n        if (this._editor && this._editor.initialized) {\n            this._editor.setContent(isNullOrUndefined(value) ? '' : value);\n        }\n        else {\n            this.initialValue = value === null ? undefined : value;\n        }\n    }\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    ngAfterViewInit() {\n        if (isPlatformBrowser(this.platformId)) {\n            this.id = this.id || uuid('tiny-angular');\n            this.inline = this.inline !== undefined ? this.inline !== false : !!(this.init?.inline);\n            this.createElement();\n            if (getTinymce() !== null) {\n                this.initialise();\n            }\n            else if (this._element && this._element.ownerDocument) {\n                // Caretaker note: the component might be destroyed before the script is loaded and its code is executed.\n                // This will lead to runtime exceptions if `initialise` will be called when the component has been destroyed.\n                ScriptLoader.load(this._element.ownerDocument, this.getScriptSrc())\n                    .pipe(takeUntil(this.destroy$))\n                    .subscribe(this.initialise);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        if (getTinymce() !== null) {\n            getTinymce().remove(this._editor);\n        }\n    }\n    createElement() {\n        const tagName = typeof this.tagName === 'string' ? this.tagName : 'div';\n        this._element = document.createElement(this.inline ? tagName : 'textarea');\n        if (this._element) {\n            if (document.getElementById(this.id)) {\n                /* eslint no-console: [\"error\", { allow: [\"warn\"] }] */\n                console.warn(`TinyMCE-Angular: an element with id [${this.id}] already exists. Editors with duplicate Id will not be able to mount`);\n            }\n            this._element.id = this.id;\n            if (isTextarea(this._element)) {\n                this._element.style.visibility = 'hidden';\n            }\n            this._elementRef.nativeElement.appendChild(this._element);\n        }\n    }\n    getScriptSrc() {\n        return isNullOrUndefined(this.tinymceScriptSrc) ?\n            `https://cdn.tiny.cloud/1/${this.apiKey}/tinymce/${this.cloudChannel}/tinymce.min.js` :\n            this.tinymceScriptSrc;\n    }\n    initEditor(editor) {\n        listenTinyMCEEvent(editor, 'blur', this.destroy$).subscribe(() => {\n            this.ngZone.run(() => this.onTouchedCallback());\n        });\n        listenTinyMCEEvent(editor, this.modelEvents, this.destroy$).subscribe(() => {\n            this.ngZone.run(() => this.emitOnChange(editor));\n        });\n        if (typeof this.initialValue === 'string') {\n            this.ngZone.run(() => {\n                editor.setContent(this.initialValue);\n                if (editor.getContent() !== this.initialValue) {\n                    this.emitOnChange(editor);\n                }\n                if (this.onInitNgModel !== undefined) {\n                    this.onInitNgModel.emit(editor);\n                }\n            });\n        }\n    }\n    emitOnChange(editor) {\n        if (this.onChangeCallback) {\n            this.onChangeCallback(editor.getContent({ format: this.outputFormat }));\n        }\n    }\n}\nEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.4\", ngImport: i0, type: EditorComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: PLATFORM_ID }, { token: TINYMCE_SCRIPT_SRC, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.4\", type: EditorComponent, isStandalone: true, selector: \"editor\", inputs: { cloudChannel: \"cloudChannel\", apiKey: \"apiKey\", init: \"init\", id: \"id\", initialValue: \"initialValue\", outputFormat: \"outputFormat\", inline: \"inline\", tagName: \"tagName\", plugins: \"plugins\", toolbar: \"toolbar\", modelEvents: \"modelEvents\", allowedEvents: \"allowedEvents\", ignoreEvents: \"ignoreEvents\", disabled: \"disabled\" }, providers: [EDITOR_COMPONENT_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0, template: '<ng-template></ng-template>', isInline: true, styles: [\":host{display:block}\\n\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"ngmodule\", type: FormsModule }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.4\", ngImport: i0, type: EditorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'editor', template: '<ng-template></ng-template>', providers: [EDITOR_COMPONENT_VALUE_ACCESSOR], standalone: true, imports: [CommonModule, FormsModule], styles: [\":host{display:block}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TINYMCE_SCRIPT_SRC]\n                }] }]; }, propDecorators: { cloudChannel: [{\n                type: Input\n            }], apiKey: [{\n                type: Input\n            }], init: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], initialValue: [{\n                type: Input\n            }], outputFormat: [{\n                type: Input\n            }], inline: [{\n                type: Input\n            }], tagName: [{\n                type: Input\n            }], plugins: [{\n                type: Input\n            }], toolbar: [{\n                type: Input\n            }], modelEvents: [{\n                type: Input\n            }], allowedEvents: [{\n                type: Input\n            }], ignoreEvents: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\nclass EditorModule {\n}\nEditorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.4\", ngImport: i0, type: EditorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nEditorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.4\", ngImport: i0, type: EditorModule, imports: [EditorComponent], exports: [EditorComponent] });\nEditorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.4\", ngImport: i0, type: EditorModule, imports: [EditorComponent] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.4\", ngImport: i0, type: EditorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [EditorComponent],\n                    exports: [EditorComponent]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EditorComponent, EditorModule, TINYMCE_SCRIPT_SRC };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}