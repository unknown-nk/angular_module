{"ast":null,"code":"/*!\n * Signature Pad v3.0.0-beta.3 | https://github.com/szimek/signature_pad\n * (c) 2018 Szymon Nowak | Released under the MIT license\n */\n\nclass Point {\n  constructor(x, y, time) {\n    this.x = x;\n    this.y = y;\n    this.time = time || Date.now();\n  }\n  distanceTo(start) {\n    return Math.sqrt(Math.pow(this.x - start.x, 2) + Math.pow(this.y - start.y, 2));\n  }\n  equals(other) {\n    return this.x === other.x && this.y === other.y && this.time === other.time;\n  }\n  velocityFrom(start) {\n    return this.time !== start.time ? this.distanceTo(start) / (this.time - start.time) : 0;\n  }\n}\nclass Bezier {\n  constructor(startPoint, control2, control1, endPoint, startWidth, endWidth) {\n    this.startPoint = startPoint;\n    this.control2 = control2;\n    this.control1 = control1;\n    this.endPoint = endPoint;\n    this.startWidth = startWidth;\n    this.endWidth = endWidth;\n  }\n  static fromPoints(points, widths) {\n    const c2 = this.calculateControlPoints(points[0], points[1], points[2]).c2;\n    const c3 = this.calculateControlPoints(points[1], points[2], points[3]).c1;\n    return new Bezier(points[1], c2, c3, points[2], widths.start, widths.end);\n  }\n  static calculateControlPoints(s1, s2, s3) {\n    const dx1 = s1.x - s2.x;\n    const dy1 = s1.y - s2.y;\n    const dx2 = s2.x - s3.x;\n    const dy2 = s2.y - s3.y;\n    const m1 = {\n      x: (s1.x + s2.x) / 2.0,\n      y: (s1.y + s2.y) / 2.0\n    };\n    const m2 = {\n      x: (s2.x + s3.x) / 2.0,\n      y: (s2.y + s3.y) / 2.0\n    };\n    const l1 = Math.sqrt(dx1 * dx1 + dy1 * dy1);\n    const l2 = Math.sqrt(dx2 * dx2 + dy2 * dy2);\n    const dxm = m1.x - m2.x;\n    const dym = m1.y - m2.y;\n    const k = l2 / (l1 + l2);\n    const cm = {\n      x: m2.x + dxm * k,\n      y: m2.y + dym * k\n    };\n    const tx = s2.x - cm.x;\n    const ty = s2.y - cm.y;\n    return {\n      c1: new Point(m1.x + tx, m1.y + ty),\n      c2: new Point(m2.x + tx, m2.y + ty)\n    };\n  }\n  length() {\n    const steps = 10;\n    let length = 0;\n    let px;\n    let py;\n    for (let i = 0; i <= steps; i += 1) {\n      const t = i / steps;\n      const cx = this.point(t, this.startPoint.x, this.control1.x, this.control2.x, this.endPoint.x);\n      const cy = this.point(t, this.startPoint.y, this.control1.y, this.control2.y, this.endPoint.y);\n      if (i > 0) {\n        const xdiff = cx - px;\n        const ydiff = cy - py;\n        length += Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n      }\n      px = cx;\n      py = cy;\n    }\n    return length;\n  }\n  point(t, start, c1, c2, end) {\n    return start * (1.0 - t) * (1.0 - t) * (1.0 - t) + 3.0 * c1 * (1.0 - t) * (1.0 - t) * t + 3.0 * c2 * (1.0 - t) * t * t + end * t * t * t;\n  }\n}\nfunction throttle(fn, wait = 250) {\n  let previous = 0;\n  let timeout = null;\n  let result;\n  let storedContext;\n  let storedArgs;\n  const later = () => {\n    previous = Date.now();\n    timeout = null;\n    result = fn.apply(storedContext, storedArgs);\n    if (!timeout) {\n      storedContext = null;\n      storedArgs = [];\n    }\n  };\n  return function (...args) {\n    const now = Date.now();\n    const remaining = wait - (now - previous);\n    storedContext = this;\n    storedArgs = args;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = now;\n      result = fn.apply(storedContext, storedArgs);\n      if (!timeout) {\n        storedContext = null;\n        storedArgs = [];\n      }\n    } else if (!timeout) {\n      timeout = window.setTimeout(later, remaining);\n    }\n    return result;\n  };\n}\nclass SignaturePad {\n  constructor(canvas, options = {}) {\n    this.canvas = canvas;\n    this.options = options;\n    this._handleMouseDown = event => {\n      if (event.which === 1) {\n        this._mouseButtonDown = true;\n        this._strokeBegin(event);\n      }\n    };\n    this._handleMouseMove = event => {\n      if (this._mouseButtonDown) {\n        this._strokeMoveUpdate(event);\n      }\n    };\n    this._handleMouseUp = event => {\n      if (event.which === 1 && this._mouseButtonDown) {\n        this._mouseButtonDown = false;\n        this._strokeEnd(event);\n      }\n    };\n    this._handleTouchStart = event => {\n      event.preventDefault();\n      if (event.targetTouches.length === 1) {\n        const touch = event.changedTouches[0];\n        this._strokeBegin(touch);\n      }\n    };\n    this._handleTouchMove = event => {\n      event.preventDefault();\n      const touch = event.targetTouches[0];\n      this._strokeMoveUpdate(touch);\n    };\n    this._handleTouchEnd = event => {\n      const wasCanvasTouched = event.target === this.canvas;\n      if (wasCanvasTouched) {\n        event.preventDefault();\n        const touch = event.changedTouches[0];\n        this._strokeEnd(touch);\n      }\n    };\n    this.velocityFilterWeight = options.velocityFilterWeight || 0.7;\n    this.minWidth = options.minWidth || 0.5;\n    this.maxWidth = options.maxWidth || 2.5;\n    this.throttle = 'throttle' in options ? options.throttle : 16;\n    this.minDistance = 'minDistance' in options ? options.minDistance : 5;\n    if (this.throttle) {\n      this._strokeMoveUpdate = throttle(SignaturePad.prototype._strokeUpdate, this.throttle);\n    } else {\n      this._strokeMoveUpdate = SignaturePad.prototype._strokeUpdate;\n    }\n    this.dotSize = options.dotSize || function () {\n      return (this.minWidth + this.maxWidth) / 2;\n    };\n    this.penColor = options.penColor || 'black';\n    this.backgroundColor = options.backgroundColor || 'rgba(0,0,0,0)';\n    this.onBegin = options.onBegin;\n    this.onEnd = options.onEnd;\n    this._ctx = canvas.getContext('2d');\n    this.clear();\n    this.on();\n  }\n  clear() {\n    const ctx = this._ctx;\n    const canvas = this.canvas;\n    ctx.fillStyle = this.backgroundColor;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    this._data = [];\n    this._reset();\n    this._isEmpty = true;\n  }\n  fromDataURL(dataUrl, options = {}, callback) {\n    const image = new Image();\n    const ratio = options.ratio || window.devicePixelRatio || 1;\n    const width = options.width || this.canvas.width / ratio;\n    const height = options.height || this.canvas.height / ratio;\n    this._reset();\n    image.onload = () => {\n      this._ctx.drawImage(image, 0, 0, width, height);\n      if (callback) {\n        callback();\n      }\n    };\n    image.onerror = error => {\n      if (callback) {\n        callback(error);\n      }\n    };\n    image.src = dataUrl;\n    this._isEmpty = false;\n  }\n  toDataURL(type = 'image/png', encoderOptions) {\n    switch (type) {\n      case 'image/svg+xml':\n        return this._toSVG();\n      default:\n        return this.canvas.toDataURL(type, encoderOptions);\n    }\n  }\n  on() {\n    this.canvas.style.touchAction = 'none';\n    this.canvas.style.msTouchAction = 'none';\n    if (window.PointerEvent) {\n      this._handlePointerEvents();\n    } else {\n      this._handleMouseEvents();\n      if ('ontouchstart' in window) {\n        this._handleTouchEvents();\n      }\n    }\n  }\n  off() {\n    this.canvas.style.touchAction = 'auto';\n    this.canvas.style.msTouchAction = 'auto';\n    this.canvas.removeEventListener('pointerdown', this._handleMouseDown);\n    this.canvas.removeEventListener('pointermove', this._handleMouseMove);\n    document.removeEventListener('pointerup', this._handleMouseUp);\n    this.canvas.removeEventListener('mousedown', this._handleMouseDown);\n    this.canvas.removeEventListener('mousemove', this._handleMouseMove);\n    document.removeEventListener('mouseup', this._handleMouseUp);\n    this.canvas.removeEventListener('touchstart', this._handleTouchStart);\n    this.canvas.removeEventListener('touchmove', this._handleTouchMove);\n    this.canvas.removeEventListener('touchend', this._handleTouchEnd);\n  }\n  isEmpty() {\n    return this._isEmpty;\n  }\n  fromData(pointGroups) {\n    this.clear();\n    this._fromData(pointGroups, ({\n      color,\n      curve\n    }) => this._drawCurve({\n      color,\n      curve\n    }), ({\n      color,\n      point\n    }) => this._drawDot({\n      color,\n      point\n    }));\n    this._data = pointGroups;\n  }\n  toData() {\n    return this._data;\n  }\n  _strokeBegin(event) {\n    const newPointGroup = {\n      color: this.penColor,\n      points: []\n    };\n    this._data.push(newPointGroup);\n    this._reset();\n    this._strokeUpdate(event);\n    if (typeof this.onBegin === 'function') {\n      this.onBegin(event);\n    }\n  }\n  _strokeUpdate(event) {\n    const x = event.clientX;\n    const y = event.clientY;\n    const point = this._createPoint(x, y);\n    const lastPointGroup = this._data[this._data.length - 1];\n    const lastPoints = lastPointGroup.points;\n    const lastPoint = lastPoints.length > 0 && lastPoints[lastPoints.length - 1];\n    const isLastPointTooClose = lastPoint ? point.distanceTo(lastPoint) <= this.minDistance : false;\n    const color = lastPointGroup.color;\n    if (!lastPoint || !(lastPoint && isLastPointTooClose)) {\n      const curve = this._addPoint(point);\n      if (!lastPoint) {\n        this._drawDot({\n          color,\n          point\n        });\n      } else if (curve) {\n        this._drawCurve({\n          color,\n          curve\n        });\n      }\n      lastPoints.push({\n        time: point.time,\n        x: point.x,\n        y: point.y\n      });\n    }\n  }\n  _strokeEnd(event) {\n    this._strokeUpdate(event);\n    if (typeof this.onEnd === 'function') {\n      this.onEnd(event);\n    }\n  }\n  _handlePointerEvents() {\n    this._mouseButtonDown = false;\n    this.canvas.addEventListener('pointerdown', this._handleMouseDown);\n    this.canvas.addEventListener('pointermove', this._handleMouseMove);\n    document.addEventListener('pointerup', this._handleMouseUp);\n  }\n  _handleMouseEvents() {\n    this._mouseButtonDown = false;\n    this.canvas.addEventListener('mousedown', this._handleMouseDown);\n    this.canvas.addEventListener('mousemove', this._handleMouseMove);\n    document.addEventListener('mouseup', this._handleMouseUp);\n  }\n  _handleTouchEvents() {\n    this.canvas.addEventListener('touchstart', this._handleTouchStart);\n    this.canvas.addEventListener('touchmove', this._handleTouchMove);\n    this.canvas.addEventListener('touchend', this._handleTouchEnd);\n  }\n  _reset() {\n    this._lastPoints = [];\n    this._lastVelocity = 0;\n    this._lastWidth = (this.minWidth + this.maxWidth) / 2;\n    this._ctx.fillStyle = this.penColor;\n  }\n  _createPoint(x, y) {\n    const rect = this.canvas.getBoundingClientRect();\n    return new Point(x - rect.left, y - rect.top, new Date().getTime());\n  }\n  _addPoint(point) {\n    const {\n      _lastPoints\n    } = this;\n    _lastPoints.push(point);\n    if (_lastPoints.length > 2) {\n      if (_lastPoints.length === 3) {\n        _lastPoints.unshift(_lastPoints[0]);\n      }\n      const widths = this._calculateCurveWidths(_lastPoints[1], _lastPoints[2]);\n      const curve = Bezier.fromPoints(_lastPoints, widths);\n      _lastPoints.shift();\n      return curve;\n    }\n    return null;\n  }\n  _calculateCurveWidths(startPoint, endPoint) {\n    const velocity = this.velocityFilterWeight * endPoint.velocityFrom(startPoint) + (1 - this.velocityFilterWeight) * this._lastVelocity;\n    const newWidth = this._strokeWidth(velocity);\n    const widths = {\n      end: newWidth,\n      start: this._lastWidth\n    };\n    this._lastVelocity = velocity;\n    this._lastWidth = newWidth;\n    return widths;\n  }\n  _strokeWidth(velocity) {\n    return Math.max(this.maxWidth / (velocity + 1), this.minWidth);\n  }\n  _drawCurveSegment(x, y, width) {\n    const ctx = this._ctx;\n    ctx.moveTo(x, y);\n    ctx.arc(x, y, width, 0, 2 * Math.PI, false);\n    this._isEmpty = false;\n  }\n  _drawCurve({\n    color,\n    curve\n  }) {\n    const ctx = this._ctx;\n    const widthDelta = curve.endWidth - curve.startWidth;\n    const drawSteps = Math.floor(curve.length()) * 2;\n    ctx.beginPath();\n    ctx.fillStyle = color;\n    for (let i = 0; i < drawSteps; i += 1) {\n      const t = i / drawSteps;\n      const tt = t * t;\n      const ttt = tt * t;\n      const u = 1 - t;\n      const uu = u * u;\n      const uuu = uu * u;\n      let x = uuu * curve.startPoint.x;\n      x += 3 * uu * t * curve.control1.x;\n      x += 3 * u * tt * curve.control2.x;\n      x += ttt * curve.endPoint.x;\n      let y = uuu * curve.startPoint.y;\n      y += 3 * uu * t * curve.control1.y;\n      y += 3 * u * tt * curve.control2.y;\n      y += ttt * curve.endPoint.y;\n      const width = curve.startWidth + ttt * widthDelta;\n      this._drawCurveSegment(x, y, width);\n    }\n    ctx.closePath();\n    ctx.fill();\n  }\n  _drawDot({\n    color,\n    point\n  }) {\n    const ctx = this._ctx;\n    const width = typeof this.dotSize === 'function' ? this.dotSize() : this.dotSize;\n    ctx.beginPath();\n    this._drawCurveSegment(point.x, point.y, width);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n  _fromData(pointGroups, drawCurve, drawDot) {\n    for (const group of pointGroups) {\n      const {\n        color,\n        points\n      } = group;\n      if (points.length > 1) {\n        for (let j = 0; j < points.length; j += 1) {\n          const basicPoint = points[j];\n          const point = new Point(basicPoint.x, basicPoint.y, basicPoint.time);\n          this.penColor = color;\n          if (j === 0) {\n            this._reset();\n          }\n          const curve = this._addPoint(point);\n          if (curve) {\n            drawCurve({\n              color,\n              curve\n            });\n          }\n        }\n      } else {\n        this._reset();\n        drawDot({\n          color,\n          point: points[0]\n        });\n      }\n    }\n  }\n  _toSVG() {\n    const pointGroups = this._data;\n    const ratio = Math.max(window.devicePixelRatio || 1, 1);\n    const minX = 0;\n    const minY = 0;\n    const maxX = this.canvas.width / ratio;\n    const maxY = this.canvas.height / ratio;\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttribute('width', this.canvas.width.toString());\n    svg.setAttribute('height', this.canvas.height.toString());\n    this._fromData(pointGroups, ({\n      color,\n      curve\n    }) => {\n      const path = document.createElement('path');\n      if (!isNaN(curve.control1.x) && !isNaN(curve.control1.y) && !isNaN(curve.control2.x) && !isNaN(curve.control2.y)) {\n        const attr = `M ${curve.startPoint.x.toFixed(3)},${curve.startPoint.y.toFixed(3)} ` + `C ${curve.control1.x.toFixed(3)},${curve.control1.y.toFixed(3)} ` + `${curve.control2.x.toFixed(3)},${curve.control2.y.toFixed(3)} ` + `${curve.endPoint.x.toFixed(3)},${curve.endPoint.y.toFixed(3)}`;\n        path.setAttribute('d', attr);\n        path.setAttribute('stroke-width', (curve.endWidth * 2.25).toFixed(3));\n        path.setAttribute('stroke', color);\n        path.setAttribute('fill', 'none');\n        path.setAttribute('stroke-linecap', 'round');\n        svg.appendChild(path);\n      }\n    }, ({\n      color,\n      point\n    }) => {\n      const circle = document.createElement('circle');\n      const dotSize = typeof this.dotSize === 'function' ? this.dotSize() : this.dotSize;\n      circle.setAttribute('r', dotSize.toString());\n      circle.setAttribute('cx', point.x.toString());\n      circle.setAttribute('cy', point.y.toString());\n      circle.setAttribute('fill', color);\n      svg.appendChild(circle);\n    });\n    const prefix = 'data:image/svg+xml;base64,';\n    const header = '<svg' + ' xmlns=\"http://www.w3.org/2000/svg\"' + ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"' + ` viewBox=\"${minX} ${minY} ${maxX} ${maxY}\"` + ` width=\"${maxX}\"` + ` height=\"${maxY}\"` + '>';\n    let body = svg.innerHTML;\n    if (body === undefined) {\n      const dummy = document.createElement('dummy');\n      const nodes = svg.childNodes;\n      dummy.innerHTML = '';\n      for (let i = 0; i < nodes.length; i += 1) {\n        dummy.appendChild(nodes[i].cloneNode(true));\n      }\n      body = dummy.innerHTML;\n    }\n    const footer = '</svg>';\n    const data = header + body + footer;\n    return prefix + btoa(data);\n  }\n}\nexport default SignaturePad;","map":{"version":3,"names":["Point","constructor","x","y","time","Date","now","distanceTo","start","Math","sqrt","pow","equals","other","velocityFrom","Bezier","startPoint","control2","control1","endPoint","startWidth","endWidth","fromPoints","points","widths","c2","calculateControlPoints","c3","c1","end","s1","s2","s3","dx1","dy1","dx2","dy2","m1","m2","l1","l2","dxm","dym","k","cm","tx","ty","length","steps","px","py","i","t","cx","point","cy","xdiff","ydiff","throttle","fn","wait","previous","timeout","result","storedContext","storedArgs","later","apply","args","remaining","clearTimeout","window","setTimeout","SignaturePad","canvas","options","_handleMouseDown","event","which","_mouseButtonDown","_strokeBegin","_handleMouseMove","_strokeMoveUpdate","_handleMouseUp","_strokeEnd","_handleTouchStart","preventDefault","targetTouches","touch","changedTouches","_handleTouchMove","_handleTouchEnd","wasCanvasTouched","target","velocityFilterWeight","minWidth","maxWidth","minDistance","prototype","_strokeUpdate","dotSize","penColor","backgroundColor","onBegin","onEnd","_ctx","getContext","clear","on","ctx","fillStyle","clearRect","width","height","fillRect","_data","_reset","_isEmpty","fromDataURL","dataUrl","callback","image","Image","ratio","devicePixelRatio","onload","drawImage","onerror","error","src","toDataURL","type","encoderOptions","_toSVG","style","touchAction","msTouchAction","PointerEvent","_handlePointerEvents","_handleMouseEvents","_handleTouchEvents","off","removeEventListener","document","isEmpty","fromData","pointGroups","_fromData","color","curve","_drawCurve","_drawDot","toData","newPointGroup","push","clientX","clientY","_createPoint","lastPointGroup","lastPoints","lastPoint","isLastPointTooClose","_addPoint","addEventListener","_lastPoints","_lastVelocity","_lastWidth","rect","getBoundingClientRect","left","top","getTime","unshift","_calculateCurveWidths","shift","velocity","newWidth","_strokeWidth","max","_drawCurveSegment","moveTo","arc","PI","widthDelta","drawSteps","floor","beginPath","tt","ttt","u","uu","uuu","closePath","fill","drawCurve","drawDot","group","j","basicPoint","minX","minY","maxX","maxY","svg","createElementNS","setAttribute","toString","path","createElement","isNaN","attr","toFixed","appendChild","circle","prefix","header","body","innerHTML","undefined","dummy","nodes","childNodes","cloneNode","footer","data","btoa"],"sources":["C:/Users/nueut/OneDrive/文件/GitHub/angular/angular_module/node_modules/signature_pad/dist/signature_pad.m.js"],"sourcesContent":["/*!\n * Signature Pad v3.0.0-beta.3 | https://github.com/szimek/signature_pad\n * (c) 2018 Szymon Nowak | Released under the MIT license\n */\n\nclass Point {\n    constructor(x, y, time) {\n        this.x = x;\n        this.y = y;\n        this.time = time || Date.now();\n    }\n    distanceTo(start) {\n        return Math.sqrt(Math.pow(this.x - start.x, 2) + Math.pow(this.y - start.y, 2));\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y && this.time === other.time;\n    }\n    velocityFrom(start) {\n        return (this.time !== start.time) ? this.distanceTo(start) / (this.time - start.time) : 0;\n    }\n}\n\nclass Bezier {\n    constructor(startPoint, control2, control1, endPoint, startWidth, endWidth) {\n        this.startPoint = startPoint;\n        this.control2 = control2;\n        this.control1 = control1;\n        this.endPoint = endPoint;\n        this.startWidth = startWidth;\n        this.endWidth = endWidth;\n    }\n    static fromPoints(points, widths) {\n        const c2 = this.calculateControlPoints(points[0], points[1], points[2]).c2;\n        const c3 = this.calculateControlPoints(points[1], points[2], points[3]).c1;\n        return new Bezier(points[1], c2, c3, points[2], widths.start, widths.end);\n    }\n    static calculateControlPoints(s1, s2, s3) {\n        const dx1 = s1.x - s2.x;\n        const dy1 = s1.y - s2.y;\n        const dx2 = s2.x - s3.x;\n        const dy2 = s2.y - s3.y;\n        const m1 = { x: (s1.x + s2.x) / 2.0, y: (s1.y + s2.y) / 2.0 };\n        const m2 = { x: (s2.x + s3.x) / 2.0, y: (s2.y + s3.y) / 2.0 };\n        const l1 = Math.sqrt((dx1 * dx1) + (dy1 * dy1));\n        const l2 = Math.sqrt((dx2 * dx2) + (dy2 * dy2));\n        const dxm = (m1.x - m2.x);\n        const dym = (m1.y - m2.y);\n        const k = l2 / (l1 + l2);\n        const cm = { x: m2.x + (dxm * k), y: m2.y + (dym * k) };\n        const tx = s2.x - cm.x;\n        const ty = s2.y - cm.y;\n        return {\n            c1: new Point(m1.x + tx, m1.y + ty),\n            c2: new Point(m2.x + tx, m2.y + ty),\n        };\n    }\n    length() {\n        const steps = 10;\n        let length = 0;\n        let px;\n        let py;\n        for (let i = 0; i <= steps; i += 1) {\n            const t = i / steps;\n            const cx = this.point(t, this.startPoint.x, this.control1.x, this.control2.x, this.endPoint.x);\n            const cy = this.point(t, this.startPoint.y, this.control1.y, this.control2.y, this.endPoint.y);\n            if (i > 0) {\n                const xdiff = cx - px;\n                const ydiff = cy - py;\n                length += Math.sqrt((xdiff * xdiff) + (ydiff * ydiff));\n            }\n            px = cx;\n            py = cy;\n        }\n        return length;\n    }\n    point(t, start, c1, c2, end) {\n        return (start * (1.0 - t) * (1.0 - t) * (1.0 - t))\n            + (3.0 * c1 * (1.0 - t) * (1.0 - t) * t)\n            + (3.0 * c2 * (1.0 - t) * t * t)\n            + (end * t * t * t);\n    }\n}\n\nfunction throttle(fn, wait = 250) {\n    let previous = 0;\n    let timeout = null;\n    let result;\n    let storedContext;\n    let storedArgs;\n    const later = () => {\n        previous = Date.now();\n        timeout = null;\n        result = fn.apply(storedContext, storedArgs);\n        if (!timeout) {\n            storedContext = null;\n            storedArgs = [];\n        }\n    };\n    return function (...args) {\n        const now = Date.now();\n        const remaining = wait - (now - previous);\n        storedContext = this;\n        storedArgs = args;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            previous = now;\n            result = fn.apply(storedContext, storedArgs);\n            if (!timeout) {\n                storedContext = null;\n                storedArgs = [];\n            }\n        }\n        else if (!timeout) {\n            timeout = window.setTimeout(later, remaining);\n        }\n        return result;\n    };\n}\n\nclass SignaturePad {\n    constructor(canvas, options = {}) {\n        this.canvas = canvas;\n        this.options = options;\n        this._handleMouseDown = (event) => {\n            if (event.which === 1) {\n                this._mouseButtonDown = true;\n                this._strokeBegin(event);\n            }\n        };\n        this._handleMouseMove = (event) => {\n            if (this._mouseButtonDown) {\n                this._strokeMoveUpdate(event);\n            }\n        };\n        this._handleMouseUp = (event) => {\n            if (event.which === 1 && this._mouseButtonDown) {\n                this._mouseButtonDown = false;\n                this._strokeEnd(event);\n            }\n        };\n        this._handleTouchStart = (event) => {\n            event.preventDefault();\n            if (event.targetTouches.length === 1) {\n                const touch = event.changedTouches[0];\n                this._strokeBegin(touch);\n            }\n        };\n        this._handleTouchMove = (event) => {\n            event.preventDefault();\n            const touch = event.targetTouches[0];\n            this._strokeMoveUpdate(touch);\n        };\n        this._handleTouchEnd = (event) => {\n            const wasCanvasTouched = event.target === this.canvas;\n            if (wasCanvasTouched) {\n                event.preventDefault();\n                const touch = event.changedTouches[0];\n                this._strokeEnd(touch);\n            }\n        };\n        this.velocityFilterWeight = options.velocityFilterWeight || 0.7;\n        this.minWidth = options.minWidth || 0.5;\n        this.maxWidth = options.maxWidth || 2.5;\n        this.throttle = ('throttle' in options ? options.throttle : 16);\n        this.minDistance = ('minDistance' in options ? options.minDistance : 5);\n        if (this.throttle) {\n            this._strokeMoveUpdate = throttle(SignaturePad.prototype._strokeUpdate, this.throttle);\n        }\n        else {\n            this._strokeMoveUpdate = SignaturePad.prototype._strokeUpdate;\n        }\n        this.dotSize = options.dotSize || function () {\n            return (this.minWidth + this.maxWidth) / 2;\n        };\n        this.penColor = options.penColor || 'black';\n        this.backgroundColor = options.backgroundColor || 'rgba(0,0,0,0)';\n        this.onBegin = options.onBegin;\n        this.onEnd = options.onEnd;\n        this._ctx = canvas.getContext('2d');\n        this.clear();\n        this.on();\n    }\n    clear() {\n        const ctx = this._ctx;\n        const canvas = this.canvas;\n        ctx.fillStyle = this.backgroundColor;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        this._data = [];\n        this._reset();\n        this._isEmpty = true;\n    }\n    fromDataURL(dataUrl, options = {}, callback) {\n        const image = new Image();\n        const ratio = options.ratio || window.devicePixelRatio || 1;\n        const width = options.width || (this.canvas.width / ratio);\n        const height = options.height || (this.canvas.height / ratio);\n        this._reset();\n        image.onload = () => {\n            this._ctx.drawImage(image, 0, 0, width, height);\n            if (callback) {\n                callback();\n            }\n        };\n        image.onerror = (error) => {\n            if (callback) {\n                callback(error);\n            }\n        };\n        image.src = dataUrl;\n        this._isEmpty = false;\n    }\n    toDataURL(type = 'image/png', encoderOptions) {\n        switch (type) {\n            case 'image/svg+xml':\n                return this._toSVG();\n            default:\n                return this.canvas.toDataURL(type, encoderOptions);\n        }\n    }\n    on() {\n        this.canvas.style.touchAction = 'none';\n        this.canvas.style.msTouchAction = 'none';\n        if (window.PointerEvent) {\n            this._handlePointerEvents();\n        }\n        else {\n            this._handleMouseEvents();\n            if ('ontouchstart' in window) {\n                this._handleTouchEvents();\n            }\n        }\n    }\n    off() {\n        this.canvas.style.touchAction = 'auto';\n        this.canvas.style.msTouchAction = 'auto';\n        this.canvas.removeEventListener('pointerdown', this._handleMouseDown);\n        this.canvas.removeEventListener('pointermove', this._handleMouseMove);\n        document.removeEventListener('pointerup', this._handleMouseUp);\n        this.canvas.removeEventListener('mousedown', this._handleMouseDown);\n        this.canvas.removeEventListener('mousemove', this._handleMouseMove);\n        document.removeEventListener('mouseup', this._handleMouseUp);\n        this.canvas.removeEventListener('touchstart', this._handleTouchStart);\n        this.canvas.removeEventListener('touchmove', this._handleTouchMove);\n        this.canvas.removeEventListener('touchend', this._handleTouchEnd);\n    }\n    isEmpty() {\n        return this._isEmpty;\n    }\n    fromData(pointGroups) {\n        this.clear();\n        this._fromData(pointGroups, ({ color, curve }) => this._drawCurve({ color, curve }), ({ color, point }) => this._drawDot({ color, point }));\n        this._data = pointGroups;\n    }\n    toData() {\n        return this._data;\n    }\n    _strokeBegin(event) {\n        const newPointGroup = {\n            color: this.penColor,\n            points: [],\n        };\n        this._data.push(newPointGroup);\n        this._reset();\n        this._strokeUpdate(event);\n        if (typeof this.onBegin === 'function') {\n            this.onBegin(event);\n        }\n    }\n    _strokeUpdate(event) {\n        const x = event.clientX;\n        const y = event.clientY;\n        const point = this._createPoint(x, y);\n        const lastPointGroup = this._data[this._data.length - 1];\n        const lastPoints = lastPointGroup.points;\n        const lastPoint = lastPoints.length > 0 && lastPoints[lastPoints.length - 1];\n        const isLastPointTooClose = lastPoint ? point.distanceTo(lastPoint) <= this.minDistance : false;\n        const color = lastPointGroup.color;\n        if (!lastPoint || !(lastPoint && isLastPointTooClose)) {\n            const curve = this._addPoint(point);\n            if (!lastPoint) {\n                this._drawDot({ color, point });\n            }\n            else if (curve) {\n                this._drawCurve({ color, curve });\n            }\n            lastPoints.push({\n                time: point.time,\n                x: point.x,\n                y: point.y,\n            });\n        }\n    }\n    _strokeEnd(event) {\n        this._strokeUpdate(event);\n        if (typeof this.onEnd === 'function') {\n            this.onEnd(event);\n        }\n    }\n    _handlePointerEvents() {\n        this._mouseButtonDown = false;\n        this.canvas.addEventListener('pointerdown', this._handleMouseDown);\n        this.canvas.addEventListener('pointermove', this._handleMouseMove);\n        document.addEventListener('pointerup', this._handleMouseUp);\n    }\n    _handleMouseEvents() {\n        this._mouseButtonDown = false;\n        this.canvas.addEventListener('mousedown', this._handleMouseDown);\n        this.canvas.addEventListener('mousemove', this._handleMouseMove);\n        document.addEventListener('mouseup', this._handleMouseUp);\n    }\n    _handleTouchEvents() {\n        this.canvas.addEventListener('touchstart', this._handleTouchStart);\n        this.canvas.addEventListener('touchmove', this._handleTouchMove);\n        this.canvas.addEventListener('touchend', this._handleTouchEnd);\n    }\n    _reset() {\n        this._lastPoints = [];\n        this._lastVelocity = 0;\n        this._lastWidth = (this.minWidth + this.maxWidth) / 2;\n        this._ctx.fillStyle = this.penColor;\n    }\n    _createPoint(x, y) {\n        const rect = this.canvas.getBoundingClientRect();\n        return new Point(x - rect.left, y - rect.top, new Date().getTime());\n    }\n    _addPoint(point) {\n        const { _lastPoints } = this;\n        _lastPoints.push(point);\n        if (_lastPoints.length > 2) {\n            if (_lastPoints.length === 3) {\n                _lastPoints.unshift(_lastPoints[0]);\n            }\n            const widths = this._calculateCurveWidths(_lastPoints[1], _lastPoints[2]);\n            const curve = Bezier.fromPoints(_lastPoints, widths);\n            _lastPoints.shift();\n            return curve;\n        }\n        return null;\n    }\n    _calculateCurveWidths(startPoint, endPoint) {\n        const velocity = (this.velocityFilterWeight * endPoint.velocityFrom(startPoint))\n            + ((1 - this.velocityFilterWeight) * this._lastVelocity);\n        const newWidth = this._strokeWidth(velocity);\n        const widths = {\n            end: newWidth,\n            start: this._lastWidth,\n        };\n        this._lastVelocity = velocity;\n        this._lastWidth = newWidth;\n        return widths;\n    }\n    _strokeWidth(velocity) {\n        return Math.max(this.maxWidth / (velocity + 1), this.minWidth);\n    }\n    _drawCurveSegment(x, y, width) {\n        const ctx = this._ctx;\n        ctx.moveTo(x, y);\n        ctx.arc(x, y, width, 0, 2 * Math.PI, false);\n        this._isEmpty = false;\n    }\n    _drawCurve({ color, curve }) {\n        const ctx = this._ctx;\n        const widthDelta = curve.endWidth - curve.startWidth;\n        const drawSteps = Math.floor(curve.length()) * 2;\n        ctx.beginPath();\n        ctx.fillStyle = color;\n        for (let i = 0; i < drawSteps; i += 1) {\n            const t = i / drawSteps;\n            const tt = t * t;\n            const ttt = tt * t;\n            const u = 1 - t;\n            const uu = u * u;\n            const uuu = uu * u;\n            let x = uuu * curve.startPoint.x;\n            x += 3 * uu * t * curve.control1.x;\n            x += 3 * u * tt * curve.control2.x;\n            x += ttt * curve.endPoint.x;\n            let y = uuu * curve.startPoint.y;\n            y += 3 * uu * t * curve.control1.y;\n            y += 3 * u * tt * curve.control2.y;\n            y += ttt * curve.endPoint.y;\n            const width = curve.startWidth + (ttt * widthDelta);\n            this._drawCurveSegment(x, y, width);\n        }\n        ctx.closePath();\n        ctx.fill();\n    }\n    _drawDot({ color, point }) {\n        const ctx = this._ctx;\n        const width = typeof this.dotSize === 'function' ? this.dotSize() : this.dotSize;\n        ctx.beginPath();\n        this._drawCurveSegment(point.x, point.y, width);\n        ctx.closePath();\n        ctx.fillStyle = color;\n        ctx.fill();\n    }\n    _fromData(pointGroups, drawCurve, drawDot) {\n        for (const group of pointGroups) {\n            const { color, points } = group;\n            if (points.length > 1) {\n                for (let j = 0; j < points.length; j += 1) {\n                    const basicPoint = points[j];\n                    const point = new Point(basicPoint.x, basicPoint.y, basicPoint.time);\n                    this.penColor = color;\n                    if (j === 0) {\n                        this._reset();\n                    }\n                    const curve = this._addPoint(point);\n                    if (curve) {\n                        drawCurve({ color, curve });\n                    }\n                }\n            }\n            else {\n                this._reset();\n                drawDot({\n                    color,\n                    point: points[0],\n                });\n            }\n        }\n    }\n    _toSVG() {\n        const pointGroups = this._data;\n        const ratio = Math.max(window.devicePixelRatio || 1, 1);\n        const minX = 0;\n        const minY = 0;\n        const maxX = this.canvas.width / ratio;\n        const maxY = this.canvas.height / ratio;\n        const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('width', this.canvas.width.toString());\n        svg.setAttribute('height', this.canvas.height.toString());\n        this._fromData(pointGroups, ({ color, curve }) => {\n            const path = document.createElement('path');\n            if (!isNaN(curve.control1.x) &&\n                !isNaN(curve.control1.y) &&\n                !isNaN(curve.control2.x) &&\n                !isNaN(curve.control2.y)) {\n                const attr = `M ${curve.startPoint.x.toFixed(3)},${curve.startPoint.y.toFixed(3)} `\n                    + `C ${curve.control1.x.toFixed(3)},${curve.control1.y.toFixed(3)} `\n                    + `${curve.control2.x.toFixed(3)},${curve.control2.y.toFixed(3)} `\n                    + `${curve.endPoint.x.toFixed(3)},${curve.endPoint.y.toFixed(3)}`;\n                path.setAttribute('d', attr);\n                path.setAttribute('stroke-width', (curve.endWidth * 2.25).toFixed(3));\n                path.setAttribute('stroke', color);\n                path.setAttribute('fill', 'none');\n                path.setAttribute('stroke-linecap', 'round');\n                svg.appendChild(path);\n            }\n        }, ({ color, point }) => {\n            const circle = document.createElement('circle');\n            const dotSize = typeof this.dotSize === 'function' ? this.dotSize() : this.dotSize;\n            circle.setAttribute('r', dotSize.toString());\n            circle.setAttribute('cx', point.x.toString());\n            circle.setAttribute('cy', point.y.toString());\n            circle.setAttribute('fill', color);\n            svg.appendChild(circle);\n        });\n        const prefix = 'data:image/svg+xml;base64,';\n        const header = '<svg'\n            + ' xmlns=\"http://www.w3.org/2000/svg\"'\n            + ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"'\n            + ` viewBox=\"${minX} ${minY} ${maxX} ${maxY}\"`\n            + ` width=\"${maxX}\"`\n            + ` height=\"${maxY}\"`\n            + '>';\n        let body = svg.innerHTML;\n        if (body === undefined) {\n            const dummy = document.createElement('dummy');\n            const nodes = svg.childNodes;\n            dummy.innerHTML = '';\n            for (let i = 0; i < nodes.length; i += 1) {\n                dummy.appendChild(nodes[i].cloneNode(true));\n            }\n            body = dummy.innerHTML;\n        }\n        const footer = '</svg>';\n        const data = header + body + footer;\n        return prefix + btoa(data);\n    }\n}\n\nexport default SignaturePad;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}